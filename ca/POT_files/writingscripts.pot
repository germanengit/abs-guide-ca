# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Moisès Gómez, Germán Alonso
# This file is distributed under the same license as the Traducció abs-guide branca git gettext-way package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Traducció abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-28 12:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../writingscripts.rst:4
# c15f9bd705bf45128f29573430bc505e
msgid "XXX  O.2. Writing Scripts"
msgstr ""

#: ../../writingscripts.rst:6
# be1ec34124d44187860c347fa8fd5d1a
msgid "Write a script to carry out each of the following tasks."
msgstr ""

#: ../../writingscripts.rst:9
# d1ee2db7960941429eee1f5f09b5fc4d
msgid "** EASY**"
msgstr ""

#: ../../writingscripts.rst:12
# d06a28ea25274759b437db9cca5f360c
msgid "Write a script that backs itself up, that is, copies itself to a file named ``         backup.sh        `` ."
msgstr ""

#: ../../writingscripts.rst:15
# 89794c4f23914ebe8e2f4c72cf3f6035
msgid "Hint: Use the `cat <basic.html#CATREF>`__ command and the appropriate `positional parameter <othertypesv.html#SCRNAMEPARAM>`__ ."
msgstr ""

#: ../../writingscripts.rst:20
# 758e2024291d4eb09c91f2124a6131bf
msgid "Perform a recursive directory listing on the user's home directory and save the information to a file. Compress the file, have the script prompt the user to insert a USB flash drive, then press **ENTER** . Finally, save the file to the flash drive after making certain the flash drive has properly mounted by parsing the output of `df <system.html#DFREF>`__ . Note that the flash drive must be *unmounted* before it is removed."
msgstr ""

#: ../../writingscripts.rst:28
# 85017a3e4e6d4c089a53b4aa75f74993
msgid "**Converting `for <loops1.html#FORLOOPREF1>`__ loops to"
msgstr ""

#: ../../writingscripts.rst:29
# 95c9b9bac4f84e3cb8a64d9414d96ea7
msgid "`while <loops1.html#WHILELOOPREF>`__ and `until <loops1.html#UNTILLOOPREF>`__ loops**"
msgstr ""

#: ../../writingscripts.rst:31
# 448898cad6e54091929aad9d2323a7f6
msgid "Convert the *for loops* in `Example 11-1 <loops1.html#EX22>`__ to *while loops* . Hint: store the data in an `array <arrays.html#ARRAYREF>`__ and step through the array elements."
msgstr ""

#: ../../writingscripts.rst:36
# f331908eebb04da1a8a5bafd7727bb42
msgid "Having already done the \"heavy lifting,\" now convert the loops in the example to *until loops* ."
msgstr ""

#: ../../writingscripts.rst:40
# 0b97eea6cd5d4e72ba27290bb3a114ce
msgid "Write a script that reads each line of a target file, then writes the line back to ``         stdout        `` , but with an extra blank line following. This has the effect of *double-spacing* the file."
msgstr ""

#: ../../writingscripts.rst:45
# b9e1c011299d4c25a1d8ade288d01c39
msgid "Include all necessary code to check whether the script gets the necessary command-line argument (a filename), and whether the specified file exists."
msgstr ""

#: ../../writingscripts.rst:49
# 7477d7fadda44c60ae73034828c748fc
msgid "When the script runs correctly, modify it to *triple-space* the target file."
msgstr ""

#: ../../writingscripts.rst:52
# 34c87dc715ba45f4b64ebcdef4058f0d
msgid "Finally, write a script to remove all blank lines from the target file, *single-spacing* it."
msgstr ""

#: ../../writingscripts.rst:56
# 1ffdc73521bd46199640cedbc23fa38d
msgid "Write a script that echoes itself to ``         stdout        `` , but *backwards* ."
msgstr ""

#: ../../writingscripts.rst:60
# 24c80756b69d470ab2a7cc87debb56e2
msgid "Given a list of filenames as input, this script queries each target file (parsing the output of the `file <filearchiv.html#FILEREF>`__ command) for the type of compression used on it. Then the script automatically invokes the appropriate decompression command ( **gunzip** , **bunzip2** , **unzip** , **uncompress** , or whatever). If a target file is not compressed, the script emits a warning message, but takes no other action on that particular file."
msgstr ""

#: ../../writingscripts.rst:69
# 5d2584c1bffb40c7b682dea76a8f16c0
msgid "Generate a \"unique\" 6-digit hexadecimal identifier for your computer. Do *not* use the flawed `hostid <system.html#HOSTIDREF>`__ command. Hint: **`md5sum <filearchiv.html#MD5SUMREF>`__ ``           /etc/passwd          `` <files.html#DATAFILESREF1>`__** , then select the first 6 digits of output."
msgstr ""

#: ../../writingscripts.rst:76
# 599b9725659741238f6fa55f09d083ac
msgid "Archive as a \"tarball\" ( ``         *.tar.gz        `` file) all the files in your home directory tree ( ``         /home/your-name        `` ) that have been modified in the last 24 hours. Hint: use `find <moreadv.html#FINDREF>`__ ."
msgstr ""

#: ../../writingscripts.rst:81
# 070c444c243047f09891fffdadfd4610
msgid "Optional: you may use this as the basis of a *backup* script."
msgstr ""

#: ../../writingscripts.rst:84
# 1ddb1e42b02a4c18a3019334d0d66054
msgid "Given a `process ID <special-chars.html#PROCESSIDREF>`__ ( *PID* ) as an argument, this script will check, at user-specified intervals, whether the given process is still running. You may use the `ps <system.html#PPSSREF>`__ and `sleep <timedate.html#SLEEPREF>`__ commands."
msgstr ""

#: ../../writingscripts.rst:91
# f16a822bc86a41eb89f8614e56c52276
msgid "Print (to ``         stdout        `` ) all prime numbers between 60000 and 63000. The output should be nicely formatted in columns (hint: use `printf <internal.html#PRINTFREF>`__ )."
msgstr ""

#: ../../writingscripts.rst:96
# 40e9cf1c6521479ca0c58da6208d234d
msgid "One type of lottery involves picking five different numbers, in the range of 1 - 50. Write a script that generates five pseudorandom numbers in this range, *with no duplicates* . The script will give the option of echoing the numbers to ``         stdout        `` or saving them to a file, along with the date and time the particular number set was generated. (If your script consistently generates *winning* lottery numbers, then you can retire on the proceeds and leave shell scripting to those of us who have to work for a living.)"
msgstr ""

#: ../../writingscripts.rst:107
# bbfa4069d01540cc826f8cf4132c3ea4
msgid "** INTERMEDIATE**"
msgstr ""

#: ../../writingscripts.rst:110
# 45ee3e5636144c2aacb68d36ca67bfea
msgid "Write a script `function <functions.html#FUNCTIONREF>`__ that determines if an argument passed to it is an integer or a string. The function will return TRUE (0) if passed an integer, and FALSE (1) if passed a string."
msgstr ""

#: ../../writingscripts.rst:115
# 37bb90eb475141ec834c2dc965836342
msgid "Hint: What does the following expression return when ``         $1        `` is *not* an integer?"
msgstr ""

#: ../../writingscripts.rst:118
# 6b6b558c60794c20817079f18998a52d
msgid "``         expr $1 + 0        ``"
msgstr ""

#: ../../writingscripts.rst:121
# 68c52eab10fc4a5d81d519d45a08e906
msgid "The *atoi* function in **C** converts a string character to an integer. Write a shell script function that performs the same operation. Likewise, write a shell script function that does the inverse, mirroring the **C** *itoa* function which converts an integer into an ASCII character."
msgstr ""

#: ../../writingscripts.rst:128
# 94966e922dc5405a9cd4c2a111f36454
msgid "List, one at a time, all files larger than 100K in the ``         /home/username        `` directory tree. Give the user the option to delete or compress the file, then proceed to show the next one. Write to a logfile the names of all deleted files and the deletion times."
msgstr ""

#: ../../writingscripts.rst:135
# d676d38d26c84b3fa68c097e720d42c2
msgid "Simulate the functionality of the deprecated `banner <extmisc.html#BANNERREF>`__ command in a script."
msgstr ""

#: ../../writingscripts.rst:139
# 3cd6427dffca4ba29cc0b5f23b184bac
msgid "Inactive accounts on a network server waste disk space and may become a security risk. Write an administrative script (to be invoked by *root* or the `cron daemon <system.html#CRONREF>`__ ) that checks for and deletes user accounts that have not been accessed within the last 90 days."
msgstr ""

#: ../../writingscripts.rst:146
# 4fc77cbc8cea4e6b8353f7ab24b9e598
msgid "Write a script for a multi-user system that checks users' disk usage. If a user surpasses a preset limit (500 MB, for example) in her ``         /home/username        `` directory, then the script automatically sends her a \"pigout\" warning e-mail."
msgstr ""

#: ../../writingscripts.rst:151
# 8bb458c817954279b3e1e78f5ef0769c
msgid "The script will use the `du <system.html#DUREF>`__ and `mail <communications.html#COMMMAIL1>`__ commands. As an option, it will allow setting and enforcing quotas using the `quota <system.html#QUOTAREF>`__ and `setquota <system.html#SETQUOTAREF>`__ commands."
msgstr ""

#: ../../writingscripts.rst:158
# 616c776d657f47cc8375349a73b259aa
msgid "For all logged in users, show their real names and the time and date of their last login."
msgstr ""

#: ../../writingscripts.rst:161
# da631b6f6a454730aaed714c1c34c9f8
msgid "Hint: use `who <system.html#WHOREF>`__ , `lastlog <system.html#LASTLOGREF>`__ , and parse ``          /etc/passwd         `` <files.html#DATAFILESREF1>`__ ."
msgstr ""

#: ../../writingscripts.rst:166
# cc26a51dd1f04dcc8ae04996d2c9dc82
msgid "Implement, as a script, a \"safe\" delete command, ``         sdel.sh        `` . Filenames passed as command-line arguments to this script are not deleted, but instead `gzipped <filearchiv.html#GZIPREF>`__ if not already compressed (use `file <filearchiv.html#FILEREF>`__ to check), then moved to a ``         ~/TRASH        `` directory. Upon invocation, the script checks the ``         ~/TRASH        `` directory for files older than 48 hours and `permanently deletes <basic.html#RMREF>`__ them. (An better alternative might be to have a second script handle this, periodically invoked by the `cron daemon <system.html#CRONREF>`__ .)"
msgstr ""

#: ../../writingscripts.rst:177
# 0feeb6a3ec1b47bcbf9c13d77cb9d1f6
msgid "*Extra credit:* Write the script so it can handle files and directories `recursively <basic.html#RMRECURS>`__ . This would give it the capability of \"safely deleting\" entire directory structures."
msgstr ""

#: ../../writingscripts.rst:182
# 6fabfe2fdfed4554b0ccf058f7469395
msgid "What is the most efficient way to make change for $1.68, using only coins in common circulations (up to 25c)? It's 6 quarters, 1 dime, a nickel, and three cents."
msgstr ""

#: ../../writingscripts.rst:186
# 4a5eba6b42624815bb724fca0d79bec4
msgid "Given any arbitrary command-line input in dollars and cents ($\\*.??), calculate the change, using the minimum number of coins. If your home country is not the United States, you may use your local currency units instead. The script will need to parse the command-line input, then change it to multiples of the smallest monetary unit (cents or whatever). Hint: look at `Example 24-8 <complexfunct.html#EX61>`__ ."
msgstr ""

#: ../../writingscripts.rst:195
# 2aba36b0d6b04c84b4cf304c19e6ae4b
msgid "Solve a *quadratic* equation of the form ``                   Ax^2 + Bx + C = 0                 `` . Have a script take as arguments the coefficients, ``                   A                 `` , ``                   B                 `` , and ``                   C                 `` , and return the solutions to five decimal places."
msgstr ""

#: ../../writingscripts.rst:203
# 73c8c1d6674c4a7fb76a812c44eecb47
msgid "Hint: pipe the coefficients to `bc <mathc.html#BCREF>`__ , using the well-known formula, ``                   x = ( -B +/- sqrt( B^2 - 4AC ) ) / 2A                 `` ."
msgstr ""

#: ../../writingscripts.rst:209
# a92e3c1414884906bd8151e3226e0237
msgid "Using the `bc <mathc.html#BCREF>`__ and `printf <internal.html#PRINTFREF>`__ commands, print out a nicely-formatted table of eight-place natural logarithms in the interval between 0.00 and 100.00, in steps of .01."
msgstr ""

#: ../../writingscripts.rst:214
# 47982771c67342fda92b1726f0df512b
msgid "Hint: *bc* requires the ``         -l        `` option to load the math library."
msgstr ""

#: ../../writingscripts.rst:218
# bc87c8bf5ecc4f229bcf6e831c359847
msgid "Using `Example T-1 <asciitable.html#ASCIISH>`__ as a template, write a script that prints to a file a complete `Unicode <bashver4.html#UNICODEREF>`__ table."
msgstr ""

#: ../../writingscripts.rst:222
# 11d0da22e2414a368ebce2d8e2703cd5
msgid "Hint: Use the ``         -e        `` option to `echo <internal.html#ECHOREF>`__ : **echo -e '\\\\uXXXX'** , where ``                   XXXX                 `` is the Unicode numerical character designation. This requires `version 4.2 <bashver4.html#BASH42>`__ or later of Bash."
msgstr ""

#: ../../writingscripts.rst:229
# 55f1ed2e1de84af7a154c6224c16030c
msgid "Find the sum of all five-digit numbers (in the range 10000 - 99999) containing *exactly two* out of the following set of digits: { 4, 5, 6 }. These may repeat within the same number, and if so, they count once for each occurrence."
msgstr ""

#: ../../writingscripts.rst:234
# 5a18e8e69d1640febb58a7245956e769
msgid "Some examples of *matching numbers* are 42057, 74638, and 89515."
msgstr ""

#: ../../writingscripts.rst:237
# c5c7ea2c0e5141399f9c31efc987aca5
msgid "A *lucky number* is one whose individual digits add up to 7, in successive additions. For example, 62431 is a *lucky number* (6 + 2 + 4 + 3 + 1 = 16, 1 + 6 = 7). Find all the *lucky numbers* between 1000 and 10000."
msgstr ""

#: ../../writingscripts.rst:243
# 7b975b02926b41bc8214f47339a38271
msgid "Borrowing the ASCII graphics from `Example A-40 <contributed-scripts.html#PETALS>`__ , write a script that plays the well-known gambling game of *craps* . The script will accept bets from one or more players, roll the dice, and keep track of wins and losses, as well as of each player's bankroll."
msgstr ""

#: ../../writingscripts.rst:250
# c5f1996e57f246ff97cb1695cdb0d59d
msgid "Write a script that plays the child's game of *tic-tac-toe* against a human player. The script will let the human choose whether to take the first move. The script will follow an optimal strategy, and therefore never lose. To simplify matters, you may use ASCII graphics:"
msgstr ""

#: ../../writingscripts.rst:260
# 906a92bf5ed748cc8c46abef64511d66
msgid "x o"
msgstr ""

#: ../../writingscripts.rst:263
# 26886928bd5641289d3ec141f9b1bc25
msgid "Your move, human (row, column)?"
msgstr ""

#: ../../writingscripts.rst:268
# e7a789631f7545b4b64aff8f3bd33580
msgid "Alphabetize (in ASCII order) an arbitrary string read from the command-line."
msgstr ""

#: ../../writingscripts.rst:272
# 8787ecdc08cf4512bf62115d5766b36f
msgid "Parse ``          /etc/passwd         `` <files.html#DATAFILESREF1>`__ , and output its contents in nice, easy-to-read tabular form."
msgstr ""

#: ../../writingscripts.rst:277
# ff93fc6c97304605bf907dc8d977fef9
msgid "Parse ``         /var/log/messages        `` to produce a nicely formatted file of user logins and login times. The script may need to run as *root* . (Hint: Search for the string \"LOGIN.\" )"
msgstr ""

#: ../../writingscripts.rst:282
# 125323018b8f4cbbbe0597a414002f00
msgid "Certain database and spreadsheet packages use save-files with the fields separated by commas, commonly referred to as *comma-separated values* or CSVs. Other applications often need to parse these files."
msgstr ""

#: ../../writingscripts.rst:286
# d8fa25ef5a7e412da53128a381aef6a5
msgid "Given a data file with comma-separated `fields <special-chars.html#FIELDREF>`__ , of the form:"
msgstr ""

#: ../../writingscripts.rst:298
# 0f28b9b4d1af424580c5226e6001bb06
msgid "Reformat the data and print it out to ``        stdout       `` in labeled, evenly-spaced columns."
msgstr ""

#: ../../writingscripts.rst:302
# cef9ac578dd94ce19a04639e5f270ed0
msgid "Given ASCII text input either from ``         stdin        `` or a file, adjust the word spacing to right-justify each line to a user-specified line-width, then send the output to ``         stdout        `` ."
msgstr ""

#: ../../writingscripts.rst:308
# a97608b628b4447b8a5436cc7859b20d
msgid "Using the `mail <communications.html#COMMMAIL1>`__ command, write a script that manages a simple mailing list. The script automatically e-mails the monthly company newsletter, read from a specified text file, and sends it to all the addresses on the mailing list, which the script reads from another specified file."
msgstr ""

#: ../../writingscripts.rst:315
# d20ba22d9bbc44c6b1afac910a07c2fd
msgid "Generate pseudorandom 8-character passwords, using characters in the ranges [0-9], [A-Z], [a-z]. Each password must contain at least two digits."
msgstr ""

#: ../../writingscripts.rst:320
# 83c3dff1243840e38cb96e0f6084e834
msgid "You suspect that one particular user on the network has been abusing her privileges and possibly attempting to hack the system. Write a script to automatically monitor and log her activities when she's signed on. The log file will save entries for the previous week, and delete those entries more than seven days old."
msgstr ""

#: ../../writingscripts.rst:326
# d38105c647a54553b5a299992c6d4752
msgid "You may use `last <system.html#LASTREF>`__ , `lastlog <system.html#LASTLOGREF>`__ , and `lastcomm <system.html#LASTCOMMREF>`__ to aid your surveillance of the suspected fiend."
msgstr ""

#: ../../writingscripts.rst:332
# d3d97b62d7fc48dd89db5d947262eb73
msgid "Using `lynx <communications.html#LYNXREF>`__ with the ``         -traversal        `` option, write a script that checks a Web site for broken links."
msgstr ""

#: ../../writingscripts.rst:338
# 495639fb3dc34e629a993ee85eb731d4
msgid "** DIFFICULT**"
msgstr ""

#: ../../writingscripts.rst:341
# 48a4fff580b24ea59e86e671011cc958
msgid "Write a script to check and validate passwords. The object is to flag \"weak\" or easily guessed password candidates."
msgstr ""

#: ../../writingscripts.rst:344
# 1fb2d97642df4a6ba6bf15c32ff0aa33
msgid "A trial password will be input to the script as a command-line parameter. To be considered acceptable, a password must meet the following minimum qualifications:"
msgstr ""

#: ../../writingscripts.rst:348
# 673447858cca4fdfa978f9af9e6d012c
msgid "Minimum length of 8 characters"
msgstr ""

#: ../../writingscripts.rst:350
# 3774ca354e0e478eb671b50acbe35700
msgid "Must contain at least one numeric character"
msgstr ""

#: ../../writingscripts.rst:352
# d8e178d7594d402ab664841f085b18dd
msgid "Must contain at least one of the following non-alphabetic characters: @ , # , $ , % , & , \\* , + , - , ="
msgstr ""

#: ../../writingscripts.rst:355
# ef956cb0eb294a7aa3e0e72ec67f2577
msgid "Optional:"
msgstr ""

#: ../../writingscripts.rst:357
# a06f9aa98de6408cac990eefcb7a797f
msgid "Do a dictionary check on every sequence of at least four consecutive alphabetic characters in the password under test. This will eliminate passwords containing embedded \"words\" found in a standard dictionary."
msgstr ""

#: ../../writingscripts.rst:362
# 70a9063d3b494f4d8cdb487ab6f8d7c1
msgid "Enable the script to check all the passwords on your system. These do not reside in ``            /etc/passwd           `` <files.html#DATAFILESREF1>`__ ."
msgstr ""

#: ../../writingscripts.rst:367
# 5f27728fa6e94d2ba703579ae214f8e6
msgid "This exercise tests mastery of `Regular Expressions <regexp.html#REGEXREF>`__ ."
msgstr ""

#: ../../writingscripts.rst:371
# 03d4c386ab6a4fd9ab8b604457869a69
msgid "Write a script that generates a *cross-reference* ( *concordance* ) on a target file. The output will be a listing of all word occurrences in the target file, along with the line numbers in which each word occurs. Traditionally, *linked list* constructs would be used in such applications. Therefore, you should investigate `arrays <arrays.html#ARRAYREF>`__ in the course of this exercise. `Example 16-12 <textproc.html#WF>`__ is probably *not* a good place to start."
msgstr ""

#: ../../writingscripts.rst:381
# 13d3f917e93f4822aba70f109e91810e
msgid "Write a script to calculate square roots of numbers using *Newton's Method* ."
msgstr ""

#: ../../writingscripts.rst:384
# 8f892dd5a65846ca8d09fb75348ea5e5
msgid "The algorithm for this, expressed as a snippet of Bash `pseudo-code <assortedtips.html#PSEUDOCODEREF>`__ is:"
msgstr ""

#: ../../writingscripts.rst:439
# 5cc23ab6893f43f7afb31a11f16c855d
msgid "It's a simple enough recipe, and *seems* at first glance easy enough to convert into a working Bash script. The problem, though, is that Bash has `no native support for floating point numbers <ops.html#NOFLOATINGPOINT>`__ . So, the script writer needs to use `bc <mathc.html#BCREF>`__ or possibly `awk <awk.html#AWKREF>`__ to convert the numbers and do the calculations. It could get rather messy . . ."
msgstr ""

#: ../../writingscripts.rst:448
# 551e9298dbbd416bb5d84a7f398a8c57
msgid "Log all accesses to the files in ``         /etc        `` during the course of a single day. This information should include the filename, user name, and access time. If any alterations to the files take place, that will be flagged. Write this data as tabular (tab-separated) formatted records in a logfile."
msgstr ""

#: ../../writingscripts.rst:455
# 211a68ae30de4e449620242f399acd92
msgid "Write a script to continually monitor all running processes and to keep track of how many child processes each parent spawns. If a process spawns more than five children, then the script sends an e-mail to the system administrator (or *root* ) with all relevant information, including the time, PID of the parent, PIDs of the children, etc. The script appends a report to a log file every ten minutes."
msgstr ""

#: ../../writingscripts.rst:464
# 6e719c6d235c4ff390f88374cc510442
msgid "Strip all comments from a shell script whose name is specified on the command-line. Note that the initial `#! line <sha-bang.html#SHABANGREF>`__ must not be stripped out."
msgstr ""

#: ../../writingscripts.rst:469
# 3d816acfb67c4da0bbcfdb4be7ba875c
msgid "Strip all the HTML tags from a specified HTML file, then reformat it into lines between 60 and 75 characters in length. Reset paragraph and block spacing, as appropriate, and convert HTML tables to their approximate text equivalent."
msgstr ""

#: ../../writingscripts.rst:475
# bdf0c88a224e4292bc2c39eb62b9460e
msgid "Convert an XML file to both HTML and text format."
msgstr ""

#: ../../writingscripts.rst:477
# 7e488ce00f8643d583569c1bab9cf513
msgid "Optional: A script that converts Docbook/SGML to XML."
msgstr ""

#: ../../writingscripts.rst:480
# 5fcfffdcde9e40c28ebd8809aef8cef8
msgid "Write a script that analyzes a spam e-mail by doing DNS lookups on the IP addresses in the headers to identify the relay hosts as well as the originating ISP. The script will forward the unaltered spam message to the responsible ISPs. Of course, it will be necessary to filter out *your own ISP's IP address* , so you don't end up complaining about yourself."
msgstr ""

#: ../../writingscripts.rst:487
# 65a35b40ae2644cf9d1921ffb87f59b2
msgid "As necessary, use the appropriate `network analysis commands <communications.html#COMMUNINFO1>`__ ."
msgstr ""

#: ../../writingscripts.rst:490
# 825b61af1433419bb9117ac4677081bf
msgid "For some ideas, see `Example 16-41 <communications.html#ISSPAMMER>`__ and `Example A-28 <contributed-scripts.html#ISSPAMMER2>`__ ."
msgstr ""

#: ../../writingscripts.rst:494
# 0d0ce8e596cf4dbbb5d8e5450457c020
msgid "Optional: Write a script that searches through a list of e-mail messages and deletes the spam according to specified filters."
msgstr ""

#: ../../writingscripts.rst:498
# ae738e3312014d3992d0c688f8ff1bc3
msgid "Write a script that automates the process of creating `man pages <basic.html#MANREF>`__ ."
msgstr ""

#: ../../writingscripts.rst:501
# ddb989411da34272876163d0ab5cf941
msgid "Given a text file which contains information to be formatted into a *man page* , the script will read the file, then invoke the appropriate `groff <textproc.html#GROFFREF>`__ commands to output the corresponding *man page* to ``         stdout        `` . The text file contains blocks of information under the standard *man page* headings, i.e., NAME, SYNOPSIS, DESCRIPTION, etc."
msgstr ""

#: ../../writingscripts.rst:508
# 672f563d96364ecb9bc91192584f155d
msgid "`Example A-39 <contributed-scripts.html#MANED>`__ is an instructive first step."
msgstr ""

#: ../../writingscripts.rst:512
# 19134d731ffe464ca971c127c1b11e71
msgid "Do a hex(adecimal) dump on a binary file specified as an argument to the script. The output should be in neat tabular `fields <special-chars.html#FIELDREF>`__ , with the first field showing the address, each of the next 8 fields a 4-byte hex number, and the final field the ASCII equivalent of the previous 8 fields."
msgstr ""

#: ../../writingscripts.rst:518
# f3f23c4c1a3d4396bd2170b3af5352e5
msgid "The obvious followup to this is to extend the hex dump script into a disassembler. Using a lookup table, or some other clever gimmick, convert the hex values into 80x86 op codes."
msgstr ""

#: ../../writingscripts.rst:523
# a8e2e54685d74dac9d8be3a5940e5ae4
msgid "Using `Example 27-15 <arrays.html#STACKEX>`__ as an inspiration, write a script that emulates a 64-bit shift register as an `array <arrays.html#ARRAYREF>`__ . Implement functions to *load* the register, *shift left* , *shift right* , and *rotate* it. Finally, write a function that interprets the register contents as eight 8-bit ASCII characters."
msgstr ""

#: ../../writingscripts.rst:532
# b3958b6f3c26402ebcd9ea08105418c9
msgid "<writingscripts.html#FTN.AEN25254>`__ by"
msgstr ""

#: ../../writingscripts.rst:533
# a54ad0db5a5144808cd41e8c51b2e130
msgid "`recursively <localvar.html#RECURSIONREF0>`__ expanding the *minors* . Use a 4 x 4 determinant as a test case."
msgstr ""

#: ../../writingscripts.rst:537
# d88812fc832642a5b6ec3aa7d6b754c4
msgid "Write a \"word-find\" puzzle generator, a script that hides 10 input words in a 10 x 10 array of random letters. The words may be hidden across, down, or diagonally."
msgstr ""

#: ../../writingscripts.rst:541
# 3be4480355484c259d4273bb20a8d2b2
msgid "Optional: Write a script that *solves* word-find puzzles. To keep this from becoming too difficult, the solution script will find only horizontal and vertical words. (Hint: Treat each row and column as a string, and search for substrings.)"
msgstr ""

#: ../../writingscripts.rst:547
# 4a3877a011e74e41bd1e2d95630d9f92
msgid "Anagram 4-letter input. For example, the anagrams of *word* are: *do or rod row word* . You may use ``         /usr/share/dict/linux.words        `` as the reference list."
msgstr ""

#: ../../writingscripts.rst:553
# 6973222a788b482197b307fcaeb794a4
msgid "A \"word ladder\" is a sequence of words, with each successive word in the sequence differing from the previous one by a single letter."
msgstr ""

#: ../../writingscripts.rst:556
# 77a20a4aa2b545adb219e5e0e095c67d
msgid "For example, to \"ladder\" from *mark* to *vase* :"
msgstr ""

#: ../../writingscripts.rst:566
# 52e1d14c65c34d63ab59f27eda2fa9b7
msgid "Write a script that solves word ladder puzzles. Given a starting and an ending word, the script will list all intermediate steps in the \"ladder.\" Note that *all* words in the sequence must be legitimate dictionary words."
msgstr ""

#: ../../writingscripts.rst:572
# 3320ffce684e43ea9c2cb2e91d94c505
msgid "The \"fog index\" of a passage of text estimates its reading difficulty, as a number corresponding roughly to a school grade level. For example, a passage with a fog index of 12 should be comprehensible to anyone with 12 years of schooling."
msgstr ""

#: ../../writingscripts.rst:577
# b5bec29db029497fba3aa5f5f286512c
msgid "The Gunning version of the fog index uses the following algorithm."
msgstr ""

#: ../../writingscripts.rst:579
# 7245fecff45540f9be51e92227f30ca2
msgid "Choose a section of the text at least 100 words in length."
msgstr ""

#: ../../writingscripts.rst:581
# ab1ed9840557426da84a4d663279c1b9
msgid "Count the number of sentences (a portion of a sentence truncated by the boundary of the text section counts as one)."
msgstr ""

#: ../../writingscripts.rst:584
# 2562575d2bc14eac99dc011e2bd598fa
msgid "Find the average number of words per sentence."
msgstr ""

#: ../../writingscripts.rst:586
# 375d85ed9f534529a913e16d58163610
msgid "AVE\\_WDS\\_SEN = TOTAL\\_WORDS / SENTENCES"
msgstr ""

#: ../../writingscripts.rst:588
# c28b1e0c80f6436a812a3f8864233822
msgid "Count the number of \"difficult\" words in the segment -- those containing at least 3 syllables. Divide this quantity by total words to get the proportion of difficult words."
msgstr ""

#: ../../writingscripts.rst:592
# c1b0ef34350747dcaf305c98e932e592
msgid "PRO\\_DIFF\\_WORDS = LONG\\_WORDS / TOTAL\\_WORDS"
msgstr ""

#: ../../writingscripts.rst:594
# 1e6924795fa942aca68fb681c1bcf21a
msgid "The Gunning fog index is the sum of the above two quantities, multiplied by 0.4, then rounded to the nearest integer."
msgstr ""

#: ../../writingscripts.rst:597
# 4ab1fcf0b7ec40efb2d9d73599bfb79a
msgid "G\\_FOG\\_INDEX = int ( 0.4 \\* ( AVE\\_WDS\\_SEN + PRO\\_DIFF\\_WORDS ) )"
msgstr ""

#: ../../writingscripts.rst:600
# 1adc55b6dc0449e689d701880947faec
msgid "Step 4 is by far the most difficult portion of the exercise. There exist various algorithms for estimating the syllable count of a word. A rule-of-thumb formula might consider the number of letters in a word and the vowel-consonant mix."
msgstr ""

#: ../../writingscripts.rst:605
# 561ac559d6494b859b1090ad9ef4dd09
msgid "A strict interpretation of the Gunning fog index does not count compound words and proper nouns as \"difficult\" words, but this would enormously complicate the script."
msgstr ""

#: ../../writingscripts.rst:610
# bfc34956911540ce87de5263b7a9c615
msgid "The Eighteenth Century French mathematician de Buffon came up with a novel experiment. Repeatedly drop a needle of length ``                   n                 `` onto a wooden floor composed of long and narrow parallel boards. The cracks separating the equal-width floorboards are a fixed distance ``                   d                 `` apart. Keep track of the total drops and the number of times the needle intersects a crack on the floor. The ratio of these two quantities turns out to be a fractional multiple of PI."
msgstr ""

#: ../../writingscripts.rst:620
# 2af0a015e826471fa49a571fa7903cd2
msgid "In the spirit of `Example 16-50 <mathc.html#CANNON>`__ , write a script that runs a Monte Carlo simulation of *Buffon's Needle* . To simplify matters, set the needle length equal to the distance between the cracks, ``                   n = d                 `` ."
msgstr ""

#: ../../writingscripts.rst:625
# 5bff8c39f2c044fdbe9ab41e2ff05927
msgid "Hint: there are actually two critical variables: the distance from the center of the needle to the nearest crack, and the inclination angle of the needle to that crack. You may use `bc <mathc.html#BCREF>`__ to handle the calculations."
msgstr ""

#: ../../writingscripts.rst:631
# 38bf906dee514d0ca6990be53351d1b5
msgid "Implement the Playfair (Wheatstone) Cipher in a script."
msgstr ""

#: ../../writingscripts.rst:633
# e3a68b5bf11c4f39818ee5e1529e1a51
msgid "The Playfair Cipher encrypts text by substitution of *digrams* (2-letter groupings). It is traditional to use a 5 x 5 letter scrambled-alphabet *key square* for the encryption and decryption."
msgstr ""

#: ../../writingscripts.rst:709
# 2ec4768e0c4e4051adb62e296446f78f
msgid "This script will have three main sections"
msgstr ""

#: ../../writingscripts.rst:711
# 5e99644c66b44f9bacdbe81434010d9c
msgid "Generating the *key square* , based on a user-input keyword."
msgstr ""

#: ../../writingscripts.rst:713
# 2fed4e5200bc44b49e6e15e37d6ee87f
msgid "Encrypting a *plaintext* message."
msgstr ""

#: ../../writingscripts.rst:715
# b90d385e80a04c3eb1ee6d4e93574cf9
msgid "Decrypting encrypted text."
msgstr ""

#: ../../writingscripts.rst:717
# 0fc36a7321e94baba36604d6f66720e1
msgid "The script will make extensive use of `arrays <arrays.html#ARRAYREF>`__ and `functions <functions.html#FUNCTIONREF>`__ . You may use `Example A-56 <contributed-scripts.html#GRONSFELD>`__ as an inspiration."
msgstr ""

#: ../../writingscripts.rst:723
# cb146a8e9b97422fbe17441869957daf
msgid "--"
msgstr ""

#: ../../writingscripts.rst:725
# 036fc36bde634de48b4e72add8f1ba20
msgid "Please do not send the author your solutions to these exercises. There are more appropriate ways to impress him with your cleverness, such as submitting bugfixes and suggestions for improving the book."
msgstr ""

#: ../../writingscripts.rst:731
# 3156066f16af4d96815ba21f475835b3
msgid "Notes"
msgstr ""

#: ../../writingscripts.rst:734
# 661bad95006e482481980569bd4823d2
msgid "` [1]  <writingscripts.html#AEN25254>`__"
msgstr ""

#: ../../writingscripts.rst:736
# 5379203d5bcc46d6a568a3bbe4586480
msgid "For all you clever types who failed intermediate algebra, a *determinant* is a numerical value associated with a multidimensional *matrix* ( `array <arrays.html#ARRAYREF>`__ of numbers)."
msgstr ""

#: ../../writingscripts.rst:745
# fb45382ffca04dadbfe6cbe2328cab31
msgid "of a 2 x 2 determinant:"
msgstr ""

#: ../../writingscripts.rst:747
# 8bd31d3cf8ed46baa019528788d95934
msgid "|a  b| |b  a|"
msgstr ""

#: ../../writingscripts.rst:750
# fe95a46f62074a57ba0e8d12be38d512
msgid "The solution is a*a"
msgstr ""

#: ../../writingscripts.rst:751
# cf3de44600af467facaf16c2d1f7ef61
msgid "b*b, where \"a\" and \"b\""
msgstr ""

#: ../../writingscripts.rst:752
# f02158b3be544436b2e0330d1e5c8794
msgid "represent numbers."
msgstr ""

