# 
msgid ""
msgstr ""
"Project-Id-Version: Traducci√≥ abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-28 12:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../textproc.rst:3
msgid "XXX  16.4. Text Processing Commands"
msgstr ""

#: ../../textproc.rst:6
msgid "** Commands affecting text and text files**"
msgstr ""

#: ../../textproc.rst:9
msgid ""
"File sort utility, often used as a filter in a pipe. This command sorts a "
"*text stream* or file forwards or backwards, or according to various keys or"
" character positions. Using the ``         -m        `` option, it merges "
"presorted input files. The *info page* lists its many capabilities and "
"options. See `Example 11-10 <loops1.html#FINDSTRING>`__ , `Example 11-11 "
"<loops1.html#SYMLINKS>`__ , and `Example A-8 <contributed-"
"scripts.html#MAKEDICT>`__ ."
msgstr ""

#: ../../textproc.rst:19
msgid ""
"*Topological sort* , reading in pairs of whitespace-separated strings and "
"sorting according to input patterns. The original purpose of **tsort** was "
"to sort a list of dependencies for an obsolete version of the *ld* linker in"
" an \"ancient\" version of UNIX."
msgstr ""

#: ../../textproc.rst:24
msgid ""
"The results of a *tsort* will usually differ markedly from those of the "
"standard **sort** command, above."
msgstr ""

#: ../../textproc.rst:28
msgid ""
"This filter removes duplicate lines from a sorted file. It is often seen in "
"a pipe coupled with `sort <textproc.html#SORTREF>`__ ."
msgstr ""

#: ../../textproc.rst:42
msgid ""
"The useful ``         -c        `` option prefixes each line of the input "
"file with its number of occurrences."
msgstr ""

#: ../../textproc.rst:71
msgid ""
"The ``                   sort INPUTFILEuniq -c | sort -nr                 ``"
" command string produces a *frequency of occurrence* listing on the ``"
"         INPUTFILE        `` file (the ``         -nr        `` options to "
"**sort** cause a reverse numerical sort). This template finds use in "
"analysis of log files and dictionary lists, and wherever the lexical "
"structure of a document needs to be examined."
msgstr ""

#: ../../textproc.rst:81
msgid "Exemple 12. Word Frequency Analysis"
msgstr ""

#: ../../textproc.rst:176
msgid ""
"The **expand** filter converts tabs to spaces. It is often used in a `pipe "
"<special-chars.html#PIPEREF>`__ ."
msgstr ""

#: ../../textproc.rst:179
msgid ""
"The **unexpand** filter converts spaces to tabs. This reverses the effect of"
" **expand** ."
msgstr ""

#: ../../textproc.rst:183
msgid ""
"A tool for extracting `fields <special-chars.html#FIELDREF>`__ from files. "
"It is similar to the ``                   print $N                 `` "
"command set in `awk <awk.html#AWKREF>`__ , but more limited. It may be "
"simpler to use *cut* in a script than *awk* . Particularly important are the"
" ``         -d        `` (delimiter) and ``         -f        `` (field "
"specifier) options."
msgstr ""

#: ../../textproc.rst:191
msgid "Using **cut** to obtain a listing of the mounted filesystems:"
msgstr ""

#: ../../textproc.rst:200
msgid "Using **cut** to list the OS and kernel version:"
msgstr ""

#: ../../textproc.rst:209
msgid "Using **cut** to extract message headers from an e-mail folder:"
msgstr ""

#: ../../textproc.rst:222
msgid "Using **cut** to parse a file:"
msgstr ""

#: ../../textproc.rst:240
msgid ""
"``                   cut -d ' ' -f2,3 filename                 `` is "
"equivalent to ``                   awk -F'[ ]' '{ print $2, $3 }' filename"
"                 ``"
msgstr ""

#: ../../textproc.rst:246 ../../textproc.rst:367 ../../textproc.rst:601
#: ../../textproc.rst:1030 ../../textproc.rst:1138
msgid "|Note"
msgstr ""

#: ../../textproc.rst:248
msgid ""
"It is even possible to specify a linefeed as a delimiter. The trick is to "
"actually embed a linefeed ( **RETURN** ) in the command sequence."
msgstr ""

#: ../../textproc.rst:258
msgid "This is line 7 of t"
msgstr ""

#: ../../textproc.rst:260
msgid "This is line 19 of"
msgstr ""

#: ../../textproc.rst:261
msgid "testfile."
msgstr ""

#: ../../textproc.rst:265
msgid "Thank you, Jaka Kranjc, for pointing this out."
msgstr ""

#: ../../textproc.rst:290
msgid "See also `Example 16-48 <mathc.html#BASE>`__ ."
msgstr ""

#: ../../textproc.rst:293
msgid ""
"Tool for merging together different files into a single, multi-column file. "
"In combination with `cut <textproc.html#CUTREF>`__ , useful for creating "
"system log files."
msgstr ""

#: ../../textproc.rst:319
msgid ""
"Consider this a special-purpose cousin of **paste** . This powerful utility "
"allows merging two files in a meaningful fashion, which essentially creates "
"a simple version of a relational database."
msgstr ""

#: ../../textproc.rst:323
msgid ""
"The **join** command operates on exactly two files, but pastes together only"
" those lines with a common tagged `field <special-chars.html#FIELDREF>`__ "
"(usually a numerical label), and writes the result to ``         stdout"
"        `` . The files to be joined should be sorted according to the tagged"
" field for the matchups to work properly."
msgstr ""

#: ../../textproc.rst:369
msgid "The tagged field appears only once in the output."
msgstr ""

#: ../../textproc.rst:375
msgid ""
"lists the beginning of a file to ``         stdout        `` . The default "
"is ``         10        `` lines, but a different number can be specified. "
"The command has a number of interesting options."
msgstr ""

#: ../../textproc.rst:381
msgid "Exemple 13. Which files are scripts?"
msgstr ""

#: ../../textproc.rst:422
msgid "Exemple 14. Generating 10-digit random numbers"
msgstr ""

#: ../../textproc.rst:513
msgid "See also `Example 16-39 <filearchiv.html#EX52>`__ ."
msgstr ""

#: ../../textproc.rst:516
msgid ""
"lists the (tail) end of a file to ``         stdout        `` . The default "
"is ``         10        `` lines, but this can be changed with the ``"
"         -n        `` option. Commonly used to keep track of changes to a "
"system logfile, using the ``         -f        `` option, which outputs "
"lines appended to the file."
msgstr ""

#: ../../textproc.rst:526
msgid "Exemple 15. Using *tail* to monitor the system log"
msgstr ""

#: ../../textproc.rst:552 ../../textproc.rst:776 ../../textproc.rst:1153
#: ../../textproc.rst:1684
msgid "|Tip"
msgstr ""

#: ../../textproc.rst:554
msgid ""
"To list a specific line of a text file, `pipe <special-"
"chars.html#PIPEREF>`__ the output of **head** to **tail -n 1** . For example"
" ``                         head -n 8 database.txttail         -n 1"
"                       `` lists the 8th line of the file ``            "
"database.txt           `` ."
msgstr ""

#: ../../textproc.rst:561
msgid "To set a variable to a given block of a text file:"
msgstr ""

#: ../../textproc.rst:566
msgid "lename | tail -n $n)"
msgstr ""

#: ../../textproc.rst:568
msgid "# filename = name of"
msgstr ""

#: ../../textproc.rst:570
msgid "# m = from beginning"
msgstr ""

#: ../../textproc.rst:571
msgid "of file, number of line"
msgstr ""

#: ../../textproc.rst:573
msgid "# n = number of line"
msgstr ""

#: ../../textproc.rst:574
msgid "s to set variable to (tr im from end of block)"
msgstr ""

#: ../../textproc.rst:603
msgid ""
"Newer implementations of **tail** deprecate the older **tail -$LINES "
"filename** usage. The standard **tail -n $LINES filename** is correct."
msgstr ""

#: ../../textproc.rst:610
msgid ""
"See also `Example 16-5 <moreadv.html#EX41>`__ , `Example 16-39 "
"<filearchiv.html#EX52>`__ and `Example 32-6 <debugging.html#ONLINE>`__ ."
msgstr ""

#: ../../textproc.rst:615
msgid ""
"A multi-purpose file search tool that uses `Regular Expressions "
"<regexp.html#REGEXREF>`__ . It was originally a command/filter in the "
"venerable **ed** line editor: ``                   g/re/p                 ``"
" -- *global - regular expression - print* ."
msgstr ""

#: ../../textproc.rst:621
msgid ""
"**grep** ``                   pattern                 `` [ ``"
"                   file                 `` ...]"
msgstr ""

#: ../../textproc.rst:624
msgid ""
"Search the target file(s) for occurrences of ``                 pattern"
"               `` , where ``                 pattern               `` may be"
" literal text or a Regular Expression."
msgstr ""

#: ../../textproc.rst:638
msgid ""
"If no target file(s) specified, **grep** works as a filter on ``         "
"stdout        `` , as in a `pipe <special-chars.html#PIPEREF>`__ ."
msgstr ""

#: ../../textproc.rst:652
msgid "The ``         -i        `` option causes a case-insensitive search."
msgstr ""

#: ../../textproc.rst:654
msgid "The ``         -w        `` option matches only whole words."
msgstr ""

#: ../../textproc.rst:656
msgid ""
"The ``         -l        `` option lists only the files in which matches "
"were found, but not the matching lines."
msgstr ""

#: ../../textproc.rst:659
msgid ""
"The ``         -r        `` (recursive) option searches files in the current"
" working directory and all subdirectories below it."
msgstr ""

#: ../../textproc.rst:662
msgid ""
"The ``         -n        `` option lists the matching lines, together with "
"line numbers."
msgstr ""

#: ../../textproc.rst:675
msgid ""
"The ``         -v        `` (or ``         --invert-match        `` ) option"
" *filters out* matches."
msgstr ""

#: ../../textproc.rst:688
msgid ""
"The ``         -c        `` ( ``         --count        `` ) option gives a "
"numerical count of matches, rather than actually listing the matches."
msgstr ""

#: ../../textproc.rst:717
msgid ""
"The ``         --color        `` (or ``         --colour        `` ) option "
"marks the matching string in color (on the console or in an *xterm* window)."
" Since *grep* prints out each entire line containing the matching pattern, "
"this lets you see exactly *what* is being matched. See also the ``         "
"-o        `` option, which shows only the matching portion of the line(s)."
msgstr ""

#: ../../textproc.rst:726
msgid "Exemple 16. Printing out the *From* lines in stored e-mail messages"
msgstr ""

#: ../../textproc.rst:760
msgid ""
"When invoked with more than one target file given, **grep** specifies which "
"file contains matches."
msgstr ""

#: ../../textproc.rst:778
msgid ""
"To force **grep** to show the filename when searching only one target file, "
"simply give ``            /dev/null           `` as the second file."
msgstr ""

#: ../../textproc.rst:786
msgid "osinfo.txt:This is a"
msgstr ""

#: ../../textproc.rst:787
msgid "file containing informa"
msgstr ""

#: ../../textproc.rst:789
msgid "osinfo.txt:The GPL"
msgstr ""

#: ../../textproc.rst:791
msgid "of the Linux operating"
msgstr ""

#: ../../textproc.rst:792
msgid "system."
msgstr ""

#: ../../textproc.rst:815
msgid ""
"If there is a successful match, **grep** returns an `exit status <exit-"
"status.html#EXITSTATUSREF>`__ of 0, which makes it useful in a condition "
"test in a script, especially in combination with the ``         -q        ``"
" option to suppress output."
msgstr ""

#: ../../textproc.rst:839
msgid ""
"`Example 32-6 <debugging.html#ONLINE>`__ demonstrates how to use **grep** to"
" search for a word pattern in a system logfile."
msgstr ""

#: ../../textproc.rst:844
msgid "Exemple 16. Emulating *grep* in a script"
msgstr ""

#: ../../textproc.rst:887
msgid ""
"How can **grep** search for two (or more) separate patterns? What if you "
"want **grep** to display all lines in a file or files that contain both "
"\"pattern1\" *and* \"pattern2\" ?"
msgstr ""

#: ../../textproc.rst:891
msgid ""
"One method is to `pipe <special-chars.html#PIPEREF>`__ the result of **grep "
"pattern1** to **grep pattern2** ."
msgstr ""

#: ../../textproc.rst:894
msgid "For example, given the following file:"
msgstr ""

#: ../../textproc.rst:909
msgid ""
"Now, let's search this file for lines containing *both* \"file\" and "
"\"text\" . . ."
msgstr ""

#: ../../textproc.rst:928
msgid "Now, for an interesting recreational use of *grep* . . ."
msgstr ""

#: ../../textproc.rst:932
msgid "Exemple 17. Crossword puzzle solver"
msgstr ""

#: ../../textproc.rst:1008
msgid ""
"uses a somewhat different, extended set of `Regular Expressions "
"<regexp.html#REGEXREF>`__ , which can make the search a bit more flexible. "
"It also allows the boolean \\( *or* ) operator."
msgstr ""

#: ../../textproc.rst:1024
msgid ""
"literal string search (no `Regular Expressions <regexp.html#REGEXREF>`__ ), "
"which generally speeds things up a bit."
msgstr ""

#: ../../textproc.rst:1032
msgid ""
"On some Linux distros, **egrep** and **fgrep** are symbolic links to, or "
"aliases for **grep** , but invoked with the ``            -E           `` "
"and ``            -F           `` options, respectively."
msgstr ""

#: ../../textproc.rst:1042
msgid "Exemple 19. Looking up definitions in *Webster's 1913 Dictionary*"
msgstr ""

#: ../../textproc.rst:1140
msgid ""
"See also `Example A-41 <contributed-scripts.html#QKY>`__ for an example of "
"speedy *fgrep* lookup on a large text file."
msgstr ""

#: ../../textproc.rst:1146
msgid ""
"**agrep** ( *approximate grep* ) extends the capabilities of **grep** to "
"approximate matching. The search string may differ by a specified number of "
"characters from the resulting matches. This utility is not part of the core "
"Linux distribution."
msgstr ""

#: ../../textproc.rst:1155
msgid ""
"To search compressed files, use **zgrep** , **zegrep** , or **zfgrep** . "
"These also work on non-compressed files, though slower than plain **grep** ,"
" **egrep** , **fgrep** . They are handy for searching through a mixed set of"
" files, some compressed, some not."
msgstr ""

#: ../../textproc.rst:1160
msgid ""
"To search `bzipped <filearchiv.html#BZIPREF>`__ files, use **bzgrep** ."
msgstr ""

#: ../../textproc.rst:1167
msgid ""
"The command **look** works like **grep** , but does a lookup on a "
"\"dictionary,\" a sorted word list. By default, **look** searches for a "
"match in ``         /usr/dict/words        `` , but a different dictionary "
"file may be specified."
msgstr ""

#: ../../textproc.rst:1174
msgid "Exemple 18. Checking words in a list for validity"
msgstr ""

#: ../../textproc.rst:1228
msgid ""
"Scripting languages especially suited for parsing text files and command "
"output. May be embedded singly or in combination in pipes and shell scripts."
msgstr ""

#: ../../textproc.rst:1233
msgid ""
"Non-interactive \"stream editor\" , permits using many **ex** commands in "
"`batch <timedate.html#BATCHPROCREF>`__ mode. It finds many uses in shell "
"scripts."
msgstr ""

#: ../../textproc.rst:1238
msgid ""
"Programmable file extractor and formatter, good for manipulating and/or "
"extracting `fields <special-chars.html#FIELDREF>`__ (columns) in structured "
"text files. Its syntax is similar to C."
msgstr ""

#: ../../textproc.rst:1243
msgid "*wc* gives a \"word count\" on a file or I/O stream:"
msgstr ""

#: ../../textproc.rst:1254
msgid ""
"``                   wc -w                 `` gives only the word count."
msgstr ""

#: ../../textproc.rst:1257
msgid ""
"``                   wc -l                 `` gives only the line count."
msgstr ""

#: ../../textproc.rst:1260
msgid ""
"``                   wc -c                 `` gives only the byte count."
msgstr ""

#: ../../textproc.rst:1263
msgid ""
"``                   wc -m                 `` gives only the character "
"count."
msgstr ""

#: ../../textproc.rst:1266
msgid ""
"``                   wc -L                 `` gives only the length of the "
"longest line."
msgstr ""

#: ../../textproc.rst:1269
msgid ""
"Using **wc** to count how many ``         .txt        `` files are in "
"current working directory:"
msgstr ""

#: ../../textproc.rst:1287
msgid ""
"Using **wc** to total up the size of all the files whose names begin with "
"letters in the range d - h"
msgstr ""

#: ../../textproc.rst:1299
msgid ""
"Using **wc** to count the instances of the word \"Linux\" in the main source"
" file for this book."
msgstr ""

#: ../../textproc.rst:1311
msgid ""
"See also `Example 16-39 <filearchiv.html#EX52>`__ and `Example 20-8 "
"<redircb.html#REDIR4>`__ ."
msgstr ""

#: ../../textproc.rst:1314
msgid ""
"Certain commands include some of the functionality of **wc** as options."
msgstr ""

#: ../../textproc.rst:1331
msgid "character translation filter."
msgstr ""

#: ../../textproc.rst:1335 ../../textproc.rst:1739
msgid "|Caution"
msgstr ""

#: ../../textproc.rst:1337
msgid ""
"`Must use quoting and/or brackets <special-chars.html#UCREF>`__ , as "
"appropriate. Quotes prevent the shell from reinterpreting the special "
"characters in **tr** command sequences. Brackets should be quoted to prevent"
" expansion by the shell."
msgstr ""

#: ../../textproc.rst:1345
msgid ""
"Either ``                   tr \"A-Z\" \"*\" <filename                 `` or"
" ``                   tr A-Z \\* <filename                 `` changes all "
"the uppercase letters in ``         filename        `` to asterisks (writes "
"to ``         stdout        `` ). On some systems this may not work, but ``"
"                   tr A-Z           '[**]'                 `` will."
msgstr ""

#: ../../textproc.rst:1354
msgid "The ``         -d        `` option deletes a range of characters."
msgstr ""

#: ../../textproc.rst:1368
msgid ""
"The ``         --squeeze-repeats        `` (or ``         -s        `` ) "
"option deletes all but the first instance of a string of consecutive "
"characters. This option is useful for removing excess `whitespace <special-"
"chars.html#WHITESPACEREF>`__ ."
msgstr ""

#: ../../textproc.rst:1381
msgid ""
"The ``         -c        `` \"complement\" option *inverts* the character "
"set to match. With this option, **tr** acts only upon those characters *not*"
" matching the specified set."
msgstr ""

#: ../../textproc.rst:1393
msgid ""
"Note that **tr** recognizes `POSIX character classes "
"<x17129.html#POSIXREF>`__ . ` [1]"
msgstr ""

#: ../../textproc.rst:1395
msgid "<textproc.html#FTN.AEN11502>`__"
msgstr ""

#: ../../textproc.rst:1408
msgid "Exemple 19. *toupper* : Transforms a file to all uppercase."
msgstr ""

#: ../../textproc.rst:1446
msgid ""
"Exemple 22. *lowercase* : Changes all filenames in working directory to "
"lowercase."
msgstr ""

#: ../../textproc.rst:1500
msgid "Exemple 20. *du* : DOS to UNIX text file conversion."
msgstr ""

#: ../../textproc.rst:1540
msgid "Exemple 21. *rot13* : ultra-weak encryption."
msgstr ""

#: ../../textproc.rst:1565
msgid "Exemple 22. Generating \"Crypto-Quote\" Puzzles"
msgstr ""

#: ../../textproc.rst:1634
msgid "***tr* variants**"
msgstr ""

#: ../../textproc.rst:1636
msgid ""
"The **tr** utility has two historic variants. The BSD version does not use "
"brackets ( ``                         tr a-z A-Z                       `` ),"
" but the SysV one does ( ``                         tr '[a-z]' '[A-Z]'"
"                       `` ). The GNU version of **tr** resembles the BSD "
"one."
msgstr ""

#: ../../textproc.rst:1647
msgid ""
"A filter that wraps lines of input to a specified width. This is especially "
"useful with the ``         -s        `` option, which breaks lines at word "
"spaces (see `Example 16-26 <textproc.html#EX50>`__ and `Example A-1 "
"<contributed-scripts.html#MAILFORMAT>`__ )."
msgstr ""

#: ../../textproc.rst:1654
msgid ""
"Simple-minded file formatter, used as a filter in a pipe to \"wrap\" long "
"lines of text output."
msgstr ""

#: ../../textproc.rst:1659
msgid "Exemple 23. Formatted file listing."
msgstr ""

#: ../../textproc.rst:1680
msgid "See also `Example 16-5 <moreadv.html#EX41>`__ ."
msgstr ""

#: ../../textproc.rst:1686
msgid ""
"A powerful alternative to **fmt** is Kamil Toman's **par** utility, "
"available from http://www.cs.berkeley.edu/~amc/Par/ ."
msgstr ""

#: ../../textproc.rst:1693
msgid ""
"This deceptively named filter removes reverse line feeds from an input "
"stream. It also attempts to replace whitespace with equivalent tabs. The "
"chief use of **col** is in filtering the output from certain text processing"
" utilities, such as **groff** and **tbl** ."
msgstr ""

#: ../../textproc.rst:1699
msgid ""
"Column formatter. This filter transforms list-type text output into a "
"\"pretty-printed\" table by inserting tabs at appropriate places."
msgstr ""

#: ../../textproc.rst:1704
msgid "Exemple 24. Using *column* to format a directory listing"
msgstr ""

#: ../../textproc.rst:1730
msgid ""
"Column removal filter. This removes columns (characters) from a file and "
"writes the file, lacking the range of specified columns, back to ``         "
"stdout        `` . ``                   colrm 2 4 <filename                 "
"`` removes the second through fourth characters from each line of the text "
"file ``         filename        `` ."
msgstr ""

#: ../../textproc.rst:1741
msgid ""
"If the file contains tabs or nonprintable characters, this may cause "
"unpredictable behavior. In such cases, consider using `expand "
"<textproc.html#EXPANDREF>`__ and **unexpand** in a pipe preceding **colrm** "
"."
msgstr ""

#: ../../textproc.rst:1750
msgid ""
"Line numbering filter: ``                   nl filename                 `` "
"lists ``         filename        `` to ``         stdout        `` , but "
"inserts consecutive numbers at the beginning of each non-blank line. If ``"
"         filename        `` omitted, operates on ``         stdin.        ``"
msgstr ""

#: ../../textproc.rst:1757
msgid ""
"The output of **nl** is very similar to ``                   cat -b"
"                 `` , since, by default **nl** does not list blank lines."
msgstr ""

#: ../../textproc.rst:1763
msgid "Exemple 25. *nl* : A self-numbering script."
msgstr ""

#: ../../textproc.rst:1792
msgid ""
"Print formatting filter. This will paginate files (or ``         stdout"
"        `` ) into sections suitable for hard copy printing or viewing on "
"screen. Various options permit row and column manipulation, joining lines, "
"setting margins, numbering lines, adding page headers, and merging files, "
"among other things. The **pr** command combines much of the functionality of"
" **nl** , **paste** , **fold** , **column** , and **expand** ."
msgstr ""

#: ../../textproc.rst:1800
msgid ""
"``                   pr -o 5 --width=65 fileZZZmore                 `` gives"
" a nice paginated listing to screen of ``         fileZZZ        `` with "
"margins set at 5 and 65."
msgstr ""

#: ../../textproc.rst:1804
msgid ""
"A particularly useful option is ``         -d        `` , forcing double-"
"spacing (same effect as **sed -G** )."
msgstr ""

#: ../../textproc.rst:1808
msgid ""
"The GNU **gettext** package is a set of utilities for `localizing "
"<localization.html>`__ and translating the text output of programs into "
"foreign languages. While originally intended for C programs, it now supports"
" quite a number of programming and scripting languages."
msgstr ""

#: ../../textproc.rst:1814
msgid ""
"The **gettext** *program* works on shell scripts. See the ``"
"                   info page                 `` ."
msgstr ""

#: ../../textproc.rst:1818
msgid ""
"A program for generating binary message catalogs. It is used for "
"`localization <localization.html>`__ ."
msgstr ""

#: ../../textproc.rst:1822
msgid ""
"A utility for converting file(s) to a different encoding (character set). "
"Its chief use is for `localization <localization.html>`__ ."
msgstr ""

#: ../../textproc.rst:1843
msgid ""
"Consider this a fancier version of **iconv** , above. This very versatile "
"utility for converting a file to a different encoding scheme. Note that "
"*recode* is not part of the standard Linux installation."
msgstr ""

#: ../../textproc.rst:1849
msgid ""
"**TeX** and **Postscript** are text markup languages used for preparing copy"
" for printing or formatted video display."
msgstr ""

#: ../../textproc.rst:1852
msgid ""
"**TeX** is Donald Knuth's elaborate typsetting system. It is often "
"convenient to write a shell script encapsulating all the options and "
"arguments passed to one of these markup languages."
msgstr ""

#: ../../textproc.rst:1856
msgid "*Ghostscript* ( **gs** ) is a GPL-ed Postscript interpreter."
msgstr ""

#: ../../textproc.rst:1859
msgid ""
"Utility for processing *TeX* and *pdf* files. Found in ``         /usr/bin"
"        `` on many Linux distros, it is actually a `shell wrapper "
"<wrapper.html#SHWRAPPER>`__ that calls `Perl <wrapper.html#PERLREF>`__ to "
"invoke *Tex* ."
msgstr ""

#: ../../textproc.rst:1877
msgid "Utility for converting plain text file to PostScript"
msgstr ""

#: ../../textproc.rst:1879
msgid ""
"For example, **enscript filename.txt -p filename.ps** produces the "
"PostScript output file ``         filename.ps        `` ."
msgstr ""

#: ../../textproc.rst:1883
msgid ""
"Yet another text markup and display formatting language is **groff** . This "
"is the enhanced GNU version of the venerable UNIX **roff/troff** display and"
" typesetting package. `Manpages <basic.html#MANREF>`__ use **groff** ."
msgstr ""

#: ../../textproc.rst:1888
msgid ""
"The **tbl** table processing utility is considered part of **groff** , as "
"its function is to convert table markup into **groff** commands."
msgstr ""

#: ../../textproc.rst:1892
msgid ""
"The **eqn** equation processing utility is likewise part of **groff** , and "
"its function is to convert equation markup into **groff** commands."
msgstr ""

#: ../../textproc.rst:1898
msgid "Exemple 26. *manview* : Viewing formatted manpages"
msgstr ""

#: ../../textproc.rst:1936
msgid "See also `Example A-39 <contributed-scripts.html#MANED>`__ ."
msgstr ""

#: ../../textproc.rst:1938
msgid "**lex** , **yacc**"
msgstr ""

#: ../../textproc.rst:1940
msgid ""
"The **lex** lexical analyzer produces programs for pattern matching. This "
"has been replaced by the nonproprietary **flex** on Linux systems."
msgstr ""

#: ../../textproc.rst:1944
msgid ""
"The **yacc** utility creates a parser based on a set of specifications. This"
" has been replaced by the nonproprietary **bison** on Linux systems."
msgstr ""

#: ../../textproc.rst:1951
msgid "Notes"
msgstr ""

#: ../../textproc.rst:1954
msgid "` [1]  <textproc.html#AEN11502>`__"
msgstr ""

#: ../../textproc.rst:1956
msgid ""
"This is only true of the GNU version of **tr** , not the generic version "
"often found on commercial UNIX systems."
msgstr ""
