# 
msgid ""
msgstr ""
"Project-Id-Version: Traducci√≥ abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-27 20:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../list-cons.rst:4
msgid "XXX  Chapter 26. List Constructs"
msgstr ""

#: ../../list-cons.rst:6
msgid ""
"The *and list* and *or list* constructs provide a means of processing a "
"number of commands consecutively. These can effectively replace complex "
"nested `if/then <testconstructs.html#TESTCONSTRUCTS1>`__ or even `case "
"<testbranch.html#CASEESAC1>`__ statements."
msgstr ""

#: ../../list-cons.rst:12
msgid "** Chaining together commands**"
msgstr ""

#: ../../list-cons.rst:14
msgid "and list"
msgstr ""

#: ../../list-cons.rst:23
msgid ""
"Each command executes in turn, provided that the previous command has given "
"a return value of ``                 true               `` (zero). At the "
"first ``                 false               `` (non-zero) return, the "
"command chain terminates (the first command returning ``                 "
"false               `` is the last one to execute)."
msgstr ""

#: ../../list-cons.rst:30
msgid ""
"An interesting use of a two-condition *and list* from an early version of "
"YongYe's `Tetris game script <http://bash.deta.in/Tetris_Game.sh>`__ :"
msgstr ""

#: ../../list-cons.rst:48
msgid "Exemple 1. Using an *and list* to test for command-line arguments"
msgstr ""

#: ../../list-cons.rst:96
msgid "Exemple 2. Another command-line arg test using an *and list*"
msgstr ""

#: ../../list-cons.rst:123
msgid "Of course, an *and list* can also *set* variables to a default value."
msgstr ""

#: ../../list-cons.rst:136
msgid "or list"
msgstr ""

#: ../../list-cons.rst:145
msgid ""
"Each command executes in turn for as long as the previous command returns "
"false . At the first true return, the command chain terminates (the first "
"command returning true is the last one to execute). This is obviously the "
"inverse of the \"and list\" ."
msgstr ""

#: ../../list-cons.rst:152
msgid "Exemple 3. Using *or lists* in combination with an *and list*"
msgstr ""

#: ../../list-cons.rst:191
msgid "|Caution"
msgstr ""

#: ../../list-cons.rst:193
msgid ""
"If the first command in an *or list* returns true , it ``"
"                         will                       `` execute."
msgstr ""

#: ../../list-cons.rst:238
msgid "|Important"
msgstr ""

#: ../../list-cons.rst:240
msgid ""
"The `exit status <exit-status.html#EXITSTATUSREF>`__ of an ``"
"                   and list                 `` or an ``                   or"
" list                 `` is the exit status of the last command executed."
msgstr ""

#: ../../list-cons.rst:248
msgid ""
"Clever combinations of *and* and *or* lists are possible, but the logic may "
"easily become convoluted and require close attention to `operator precedence"
" rules <opprecedence.html#OPPRECEDENCE1>`__ , and possibly extensive "
"debugging."
msgstr ""

#: ../../list-cons.rst:271
msgid ""
"See `Example A-7 <contributed-scripts.html#DAYSBETWEEN>`__ and `Example 7-4 "
"<fto.html#BROKENLINK>`__ for illustrations of using ``             and     /"
" or list           `` constructs to test variables."
msgstr ""
