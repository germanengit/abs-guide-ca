# 
msgid ""
msgstr ""
"Project-Id-Version: Traducci√≥ abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-27 20:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../string-manipulation.rst:4
msgid "XXX  10.1. Manipulating Strings"
msgstr ""

#: ../../string-manipulation.rst:6
msgid ""
"Bash supports a surprising number of string manipulation operations. "
"Unfortunately, these tools lack a unified focus. Some are a subset of "
"`parameter substitution <parameter-substitution.html#PARAMSUBREF>`__ , and "
"others fall under the functionality of the UNIX `expr "
"<moreadv.html#EXPRREF>`__ command. This results in inconsistent command "
"syntax and overlap of functionality, not to mention confusion."
msgstr ""

#: ../../string-manipulation.rst:14
msgid "**String Length**"
msgstr ""

#: ../../string-manipulation.rst:16
msgid "${#string} expr length $string"
msgstr ""

#: ../../string-manipulation.rst:18
msgid "These are the equivalent of *strlen()* in *C* ."
msgstr ""

#: ../../string-manipulation.rst:20
msgid "expr \"$string\" : '.\\*'"
msgstr ""

#: ../../string-manipulation.rst:36
msgid "Exemple 1. Inserting a blank line between paragraphs in a text file"
msgstr ""

#: ../../string-manipulation.rst:79
msgid "**Length of Matching Substring at Beginning of String**"
msgstr ""

#: ../../string-manipulation.rst:82
msgid ""
"``                   $substring                 `` is a `regular expression "
"<regexp.html#REGEXREF>`__ ."
msgstr ""

#: ../../string-manipulation.rst:86
msgid ""
"``                   $substring                 `` is a regular expression."
msgstr ""

#: ../../string-manipulation.rst:103
msgid "**Index**"
msgstr ""

#: ../../string-manipulation.rst:106
msgid ""
"Numerical position in $string of first character in $substring that matches."
msgstr ""

#: ../../string-manipulation.rst:122
msgid "This is the near equivalent of *strchr()* in *C* ."
msgstr ""

#: ../../string-manipulation.rst:126
msgid "**Substring Extraction**"
msgstr ""

#: ../../string-manipulation.rst:129
msgid ""
"Extracts substring from ``                   $string                 `` at "
"``                   $position                 `` ."
msgstr ""

#: ../../string-manipulation.rst:133
msgid ""
"If the ``         $string        `` parameter is \" \\* \" or \" @ \" , then"
" this extracts the `positional parameters "
"<internalvariables.html#POSPARAMREF>`__ , ` [1]"
msgstr ""

#: ../../string-manipulation.rst:136
msgid "<string-manipulation.html#FTN.AEN5987>`__ starting at"
msgstr ""

#: ../../string-manipulation.rst:137
msgid "``         $position        `` ."
msgstr ""

#: ../../string-manipulation.rst:140
msgid ""
"Extracts ``                   $length                 `` characters of "
"substring from ``                   $string                 `` at ``"
"                   $position                 `` ."
msgstr ""

#: ../../string-manipulation.rst:175
msgid ""
"The *position* and *length* arguments can be \"parameterized,\" that is, "
"represented as a variable, rather than as a numerical constant."
msgstr ""

#: ../../string-manipulation.rst:180
msgid "Exemple 2. Generating an 8-character \"random\" string"
msgstr ""

#: ../../string-manipulation.rst:219
msgid ""
"If the ``         $string        `` parameter is \" \\* \" or \" @ \" , then"
" this extracts a maximum of ``         $length        `` positional "
"parameters, starting at ``         $position        `` ."
msgstr ""

#: ../../string-manipulation.rst:234
msgid ""
"Extracts ``                   $length                 `` characters from ``"
"                   $string                 `` starting at ``"
"                   $position                 `` ."
msgstr ""

#: ../../string-manipulation.rst:251
msgid ""
"Extracts ``                   $substring                 `` at beginning of "
"``                   $string                 `` , where ``"
"                   $substring                 `` is a `regular expression "
"<regexp.html#REGEXREF>`__ ."
msgstr ""

#: ../../string-manipulation.rst:257
msgid ""
"Extracts ``                   $substring                 `` at beginning of "
"``                   $string                 `` , where ``"
"                   $substring                 `` is a regular expression."
msgstr ""

#: ../../string-manipulation.rst:276 ../../string-manipulation.rst:282
msgid ""
"Extracts ``                   $substring                 `` at *end* of ``"
"                   $string                 `` , where ``                   "
"$substring                 `` is a regular expression."
msgstr ""

#: ../../string-manipulation.rst:300
msgid "**Substring Removal**"
msgstr ""

#: ../../string-manipulation.rst:303
msgid ""
"Deletes shortest match of ``                   $substring                 ``"
" from *front* of ``                   $string                 `` ."
msgstr ""

#: ../../string-manipulation.rst:308
msgid ""
"Deletes longest match of ``                   $substring                 `` "
"from *front* of ``                   $string                 `` ."
msgstr ""

#: ../../string-manipulation.rst:338
msgid ""
"Deletes shortest match of ``                   $substring                 ``"
" from *back* of ``                   $string                 `` ."
msgstr ""

#: ../../string-manipulation.rst:342
msgid "For example:"
msgstr ""

#: ../../string-manipulation.rst:365
msgid ""
"Deletes longest match of ``                   $substring                 `` "
"from *back* of ``                   $string                 `` ."
msgstr ""

#: ../../string-manipulation.rst:384
msgid "This operator is useful for generating filenames."
msgstr ""

#: ../../string-manipulation.rst:388
msgid "Exemple 3. Converting graphic file formats, with filename change"
msgstr ""

#: ../../string-manipulation.rst:458
msgid "Exemple 4. Converting streaming audio files to *ogg*"
msgstr ""

#: ../../string-manipulation.rst:518
msgid ""
"A simple emulation of `getopt <extmisc.html#GETOPTY>`__ using substring-"
"extraction constructs."
msgstr ""

#: ../../string-manipulation.rst:523
msgid "Exemple 5. Emulating *getopt*"
msgstr ""

#: ../../string-manipulation.rst:578
msgid "**Substring Replacement**"
msgstr ""

#: ../../string-manipulation.rst:581
msgid ""
"Replace first *match* of ``                   $substring                 `` "
"with ``                   $replacement                 `` . ` [2]"
msgstr ""

#: ../../string-manipulation.rst:584
msgid "<string-manipulation.html#FTN.AEN6164>`__"
msgstr ""

#: ../../string-manipulation.rst:587
msgid ""
"Replace all matches of ``                   $substring                 `` "
"with ``                   $replacement                 `` ."
msgstr ""

#: ../../string-manipulation.rst:625
msgid ""
"If ``                   $substring                 `` matches *front* end of"
" ``                   $string                 `` , substitute ``"
"                   $replacement                 `` for ``                   "
"$substring                 `` ."
msgstr ""

#: ../../string-manipulation.rst:631
msgid ""
"If ``                   $substring                 `` matches *back* end of "
"``                   $string                 `` , substitute ``"
"                   $replacement                 `` for ``                   "
"$substring                 `` ."
msgstr ""

#: ../../string-manipulation.rst:651
msgid "10.1.1. Manipulating strings using awk"
msgstr ""

#: ../../string-manipulation.rst:654
msgid ""
"A Bash script may invoke the string manipulation facilities of `awk "
"<awk.html#AWKREF>`__ as an alternative to using its built-in operations."
msgstr ""

#: ../../string-manipulation.rst:660
msgid "Exemple 6. Alternate ways of extracting and locating substrings"
msgstr ""

#: ../../string-manipulation.rst:705
msgid ""
"For more on string manipulation in scripts, refer to `Section 10.2 "
"<parameter-substitution.html>`__ and the `relevant section "
"<moreadv.html#EXPEXTRSUB>`__ of the `expr <moreadv.html#EXPRREF>`__ command "
"listing."
msgstr ""

#: ../../string-manipulation.rst:710
msgid "Script examples:"
msgstr ""

#: ../../string-manipulation.rst:712
msgid "`Example 16-9 <moreadv.html#EX45>`__"
msgstr ""

#: ../../string-manipulation.rst:714
msgid "`Example 10-9 <parameter-substitution.html#LENGTH>`__"
msgstr ""

#: ../../string-manipulation.rst:716
msgid "`Example 10-10 <parameter-substitution.html#PATTMATCHING>`__"
msgstr ""

#: ../../string-manipulation.rst:718
msgid "`Example 10-11 <parameter-substitution.html#RFE>`__"
msgstr ""

#: ../../string-manipulation.rst:720
msgid "`Example 10-13 <parameter-substitution.html#VARMATCH>`__"
msgstr ""

#: ../../string-manipulation.rst:722
msgid "`Example A-36 <contributed-scripts.html#INSERTIONSORT>`__"
msgstr ""

#: ../../string-manipulation.rst:724
msgid "`Example A-41 <contributed-scripts.html#QKY>`__"
msgstr ""

#: ../../string-manipulation.rst:729
msgid "Notes"
msgstr ""

#: ../../string-manipulation.rst:732
msgid "` [1]  <string-manipulation.html#AEN5987>`__"
msgstr ""

#: ../../string-manipulation.rst:734
msgid ""
"This applies to either command-line arguments or parameters passed to a "
"`function <functions.html#FUNCTIONREF>`__ ."
msgstr ""

#: ../../string-manipulation.rst:738
msgid "` [2]  <string-manipulation.html#AEN6164>`__"
msgstr ""

#: ../../string-manipulation.rst:740
msgid ""
"Note that ``               $substring             `` and ``               "
"$replacement             `` may refer to either *literal strings* or "
"*variables* , depending on context. See the first usage example."
msgstr ""
