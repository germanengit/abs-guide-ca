# 
msgid ""
msgstr ""
"Project-Id-Version: Traducci√≥ abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-28 12:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../securityissues.rst:4
msgid "XXX  36.8. Security Issues"
msgstr ""

#: ../../securityissues.rst:7
msgid "36.8.1. Infected Shell Scripts"
msgstr ""

#: ../../securityissues.rst:10
msgid ""
"A brief warning about script security is indicated. A shell script may "
"contain a *worm* , *trojan* , or even a *virus* . For that reason, never run"
" as *root* a script (or permit it to be inserted into the system startup "
"scripts in ``       /etc/rc.d      `` ) unless you have obtained said script"
" from a trusted source or you have carefully analyzed it to make certain it "
"does nothing harmful."
msgstr ""

#: ../../securityissues.rst:17
msgid ""
"Various researchers at Bell Labs and other sites, including M. Douglas "
"McIlroy, Tom Duff, and Fred Cohen have investigated the implications of "
"shell script viruses. They conclude that it is all too easy for even a "
"novice, a \"script kiddie,\" to write one. ` [1]"
msgstr ""

#: ../../securityissues.rst:21
msgid "<securityissues.html#FTN.AEN20748>`__"
msgstr ""

#: ../../securityissues.rst:23
msgid ""
"Here is yet another reason to learn scripting. Being able to look at and "
"understand scripts may protect your system from being compromised by a rogue"
" script."
msgstr ""

#: ../../securityissues.rst:29
msgid "36.8.2. Hiding Shell Script Source"
msgstr ""

#: ../../securityissues.rst:32
msgid ""
"For security purposes, it may be necessary to render a script unreadable. If"
" only there were a utility to create a stripped binary executable from a "
"script. Francisco Rosales' `shc -- generic shell script compiler "
"<http://www.datsi.fi.upm.es/~frosal/sources/>`__ does exactly that."
msgstr ""

#: ../../securityissues.rst:38
msgid ""
"Unfortunately, according to `an article "
"<http://www.linuxjournal.com/article/8256>`__ in the October, 2005 *Linux "
"Journal* , the binary can, in at least some cases, be decrypted to recover "
"the original script source. Still, this could be a useful method of keeping "
"scripts secure from all but the most skilled hackers."
msgstr ""

#: ../../securityissues.rst:47
msgid "36.8.3. Writing Secure Shell Scripts"
msgstr ""

#: ../../securityissues.rst:50
msgid ""
"*Dan Stromberg* suggests the following guidelines for writing (relatively) "
"secure shell scripts."
msgstr ""

#: ../../securityissues.rst:53
msgid ""
"Don't put secret data in `environment variables <othertypesv.html#ENVREF>`__"
" ."
msgstr ""

#: ../../securityissues.rst:56
msgid ""
"Don't pass secret data in an external command's arguments (pass them in via "
"a `pipe <special-chars.html#PIPEREF>`__ or `redirection <io-"
"redirection.html#IOREDIRREF>`__ instead)."
msgstr ""

#: ../../securityissues.rst:60
msgid ""
"Set your `$PATH <internalvariables.html#PATHREF>`__ carefully. Don't just "
"trust whatever path you inherit from the caller if your script is running as"
" *root* . In fact, whenever you use an environment variable inherited from "
"the caller, think about what could happen if the caller put something "
"misleading in the variable, e.g., if the caller set `$HOME "
"<internalvariables.html#HOMEDIRREF>`__ to ``         /etc        `` ."
msgstr ""

#: ../../securityissues.rst:71
msgid "Notes"
msgstr ""

#: ../../securityissues.rst:74
msgid "` [1]  <securityissues.html#AEN20748>`__"
msgstr ""

#: ../../securityissues.rst:76
msgid ""
"See Marius van Oers' article, `Unix Shell Scripting Malware "
"<http://www.virusbtn.com/magazine/archives/200204/malshell.xml>`__ , and "
"also the `*Denning* reference <biblio.html#DENNINGREF>`__ in the "
"*bibliography* ."
msgstr ""
