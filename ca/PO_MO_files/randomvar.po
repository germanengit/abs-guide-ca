# 
msgid ""
msgstr ""
"Project-Id-Version: Traducci√≥ abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-28 12:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../randomvar.rst:4
msgid "XXX  9.3. $RANDOM: generate random integer"
msgstr ""

#: ../../randomvar.rst:7
msgid "**"
msgstr ""

#: ../../randomvar.rst:9
msgid ""
"*Anyone who attempts to generate random numbers by deterministic means is, "
"of course, living in a state of sin.*"
msgstr ""

#: ../../randomvar.rst:12
msgid "*--John von Neumann*"
msgstr ""

#: ../../randomvar.rst:16
msgid ""
"``      $RANDOM     `` is an internal Bash `function "
"<functions.html#FUNCTIONREF>`__ (not a constant) that returns a "
"*pseudorandom* ` [1]  <randomvar.html#FTN.AEN5817>`__ integer in the range 0"
" - 32767. It should ``             not           `` be used to generate an "
"encryption key."
msgstr ""

#: ../../randomvar.rst:24
msgid "Exemple 11. Generating random numbers"
msgstr ""

#: ../../randomvar.rst:142
msgid "Exemple 12. Picking a random card from a deck"
msgstr ""

#: ../../randomvar.rst:199
msgid "Exemple 13. Brownian Motion Simulation"
msgstr ""

#: ../../randomvar.rst:331
msgid ""
"*Jipe* points out a set of techniques for generating random numbers within a"
" range."
msgstr ""

#: ../../randomvar.rst:352
msgid ""
"*Bill Gradwohl* came up with an improved formula that works for positive "
"numbers."
msgstr ""

#: ../../randomvar.rst:362
msgid ""
"Here Bill presents a versatile function that returns a random number between"
" two specified values."
msgstr ""

#: ../../randomvar.rst:367
msgid "Exemple 14. Random between values"
msgstr ""

#: ../../randomvar.rst:570
msgid ""
"Just how random is ``      $RANDOM     `` ? The best way to test this is to "
"write a script that tracks the distribution of \"random\" numbers generated "
"by ``      $RANDOM     `` . Let's roll a ``      $RANDOM     `` die a few "
"times . . ."
msgstr ""

#: ../../randomvar.rst:577
msgid "Exemple 15. Rolling a single die with RANDOM"
msgstr ""

#: ../../randomvar.rst:655
msgid ""
"As we have seen in the last example, it is best to *reseed* the ``"
"             RANDOM           `` generator each time it is invoked. Using "
"the same seed for ``             RANDOM           `` repeats the same series"
" of numbers. ` [2]  <randomvar.html#FTN.AEN5857>`__ (This mirrors the "
"behavior of the ``             random()           `` function in *C* .)"
msgstr ""

#: ../../randomvar.rst:664
msgid "Exemple 16. Reseeding RANDOM"
msgstr ""

#: ../../randomvar.rst:736
msgid "|Note"
msgstr ""

#: ../../randomvar.rst:738
msgid ""
"The ``         /dev/urandom        `` pseudo-device file provides a method "
"of generating much more \"random\" pseudorandom numbers than the ``         "
"$RANDOM        `` variable. ``                   dd if=/dev/urandom "
"of=targetfile       bs=1 count=XX                 `` creates a file of well-"
"scattered pseudorandom numbers. However, assigning these numbers to a "
"variable in a script requires a workaround, such as filtering through `od "
"<extmisc.html#ODREF>`__ (as in above example, `Example 16-14 "
"<textproc.html#RND>`__ , and `Example A-36 <contributed-"
"scripts.html#INSERTIONSORT>`__ ), or even piping to `md5sum "
"<filearchiv.html#MD5SUMREF>`__ (see `Example 36-16 "
"<colorizing.html#HORSERACE>`__ )."
msgstr ""

#: ../../randomvar.rst:750
msgid ""
"There are also other ways to generate pseudorandom numbers in a script. "
"**Awk** provides a convenient means of doing this."
msgstr ""

#: ../../randomvar.rst:755
msgid "Exemple 17. Pseudorandom numbers, using `awk <awk.html#AWKREF>`__"
msgstr ""

#: ../../randomvar.rst:793
msgid ""
"The `date <timedate.html#DATEREF>`__ command also lends itself to "
"`generating pseudorandom integer sequences <timedate.html#DATERANDREF>`__ ."
msgstr ""

#: ../../randomvar.rst:868
msgid "Notes"
msgstr ""

#: ../../randomvar.rst:871
msgid "` [1]  <randomvar.html#AEN5817>`__"
msgstr ""

#: ../../randomvar.rst:873
msgid ""
"True \"randomness,\" insofar as it exists at all, can only be found in "
"certain incompletely understood natural phenomena, such as radioactive "
"decay. Computers only *simulate* randomness, and computer-generated "
"sequences of \"random\" numbers are therefore referred to as *pseudorandom* "
"."
msgstr ""

#: ../../randomvar.rst:880
msgid "` [2]  <randomvar.html#AEN5857>`__"
msgstr ""

#: ../../randomvar.rst:882
msgid ""
"The *seed* of a computer-generated pseudorandom number series can be "
"considered an identification label. For example, think of the pseudorandom "
"series with a seed of *23* as ``               Series           #23"
"             `` ."
msgstr ""

#: ../../randomvar.rst:887
msgid ""
"A property of a pseurandom number series is the length of the cycle before "
"it starts repeating itself. A good pseurandom generator will produce series "
"with very long cycles."
msgstr ""
