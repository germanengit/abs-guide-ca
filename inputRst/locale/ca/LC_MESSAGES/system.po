# 
msgid ""
msgstr ""
"Project-Id-Version: Traducció abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-27 20:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../system.rst:3
msgid "XXX  Chapter 17. System and Administrative Commands"
msgstr ""

#: ../../system.rst:5
msgid ""
"The startup and shutdown scripts in ``      /etc/rc.d     `` illustrate the "
"uses (and usefulness) of many of these comands. These are usually invoked by"
" *root* and used for system maintenance or emergency filesystem repairs. Use"
" with caution, as some of these commands may damage your system if misused."
msgstr ""

#: ../../system.rst:12
msgid "** Users and Groups**"
msgstr ""

#: ../../system.rst:15
msgid ""
"Show all logged on users. This is the approximate equivalent of **who -q** ."
msgstr ""

#: ../../system.rst:19
msgid ""
"Lists the current user and the groups she belongs to. This corresponds to "
"the `$GROUPS <internalvariables.html#GROUPSREF>`__ internal variable, but "
"gives the group names, rather than the numbers."
msgstr ""

#: ../../system.rst:36
msgid ""
"The **chown** command changes the ownership of a file or files. This command"
" is a useful method that *root* can use to shift file ownership from one "
"user to another. An ordinary user may not change the ownership of files, not"
" even her own files. ` [1]"
msgstr ""

#: ../../system.rst:40
msgid "<system.html#FTN.AEN14695>`__"
msgstr ""

#: ../../system.rst:51
msgid ""
"The **chgrp** command changes the ``                   group"
"                 `` ownership of a file or files. You must be owner of the "
"file(s) as well as a member of the destination group (or *root* ) to use "
"this operation."
msgstr ""

#: ../../system.rst:66
msgid ""
"The **useradd** administrative command adds a user account to the system and"
" creates a home directory for that particular user, if so specified. The "
"corresponding **userdel** command removes a user account from the system ` "
"[2]  <system.html#FTN.AEN14727>`__ and deletes associated files."
msgstr ""

#: ../../system.rst:74 ../../system.rst:113 ../../system.rst:230
#: ../../system.rst:370 ../../system.rst:714 ../../system.rst:1204
#: ../../system.rst:1253 ../../system.rst:1411 ../../system.rst:1663
#: ../../system.rst:1838 ../../system.rst:2049 ../../system.rst:2455
#: ../../system.rst:2675 ../../system.rst:2728 ../../system.rst:2840
msgid "|Note"
msgstr ""

#: ../../system.rst:76
msgid ""
"The **adduser** command is a synonym for **useradd** and is usually a "
"symbolic link to it."
msgstr ""

#: ../../system.rst:83
msgid ""
"Modify a user account. Changes may be made to the password, group "
"membership, expiration date, and other attributes of a given user's account."
" With this command, a user's password may be locked, which has the effect of"
" disabling the account."
msgstr ""

#: ../../system.rst:89
msgid ""
"Modify a given group. The group name and/or ID number may be changed using "
"this command."
msgstr ""

#: ../../system.rst:93
msgid ""
"The **id** command lists the real and effective user IDs and the group IDs "
"of the user associated with the current process. This is the counterpart to "
"the `$UID <internalvariables.html#UIDREF>`__ , `$EUID "
"<internalvariables.html#EUIDREF>`__ , and `$GROUPS "
"<internalvariables.html#GROUPSREF>`__ internal Bash variables."
msgstr ""

#: ../../system.rst:115
msgid ""
"The **id** command shows the *effective* IDs only when they differ from the "
"*real* ones."
msgstr ""

#: ../../system.rst:121
msgid "Also see `Example 9-5 <internalvariables.html#AMIROOT>`__ ."
msgstr ""

#: ../../system.rst:124
msgid ""
"The *lid* (list ID) command shows the group(s) that a given user belongs to,"
" or alternately, the users belonging to a given group. May be invoked only "
"by root."
msgstr ""

#: ../../system.rst:145
msgid "Show all users logged on to the system."
msgstr ""

#: ../../system.rst:159
msgid ""
"The ``         -m        `` gives detailed information about only the "
"current user. Passing any two arguments to **who** is the equivalent of "
"**who -m** , as in **who am i** or **who The Man** ."
msgstr ""

#: ../../system.rst:184
msgid ""
"Show all logged on users and the processes belonging to them. This is an "
"extended version of **who** . The output of **w** may be piped to `grep "
"<textproc.html#GREPREF>`__ to find a specific user and/or process."
msgstr ""

#: ../../system.rst:198
msgid ""
"Show current user's login name (as found in ``         /var/run/utmp        "
"`` ). This is a near-equivalent to `whoami <system.html#WHOAMIREF>`__ , "
"above."
msgstr ""

#: ../../system.rst:213
msgid "However . . ."
msgstr ""

#: ../../system.rst:232
msgid ""
"While **logname** prints the name of the logged in user, **whoami** gives "
"the name of the user attached to the current process. As we have just seen, "
"sometimes these are not the same."
msgstr ""

#: ../../system.rst:240
msgid ""
"Runs a program or script as a **s** ubstitute **u** ser. **su rjones** "
"starts a shell as user *rjones* . A naked **su** defaults to *root* . See "
"`Example A-14 <contributed-scripts.html#FIFO>`__ ."
msgstr ""

#: ../../system.rst:245
msgid ""
"Runs a command as *root* (or another user). This may be used in a script, "
"thus permitting a *regular user* to run the script."
msgstr ""

#: ../../system.rst:259
msgid ""
"The file ``         /etc/sudoers        `` holds the names of users "
"permitted to invoke **sudo** ."
msgstr ""

#: ../../system.rst:263
msgid "Sets, changes, or manages a user's password."
msgstr ""

#: ../../system.rst:265
msgid ""
"The **passwd** command can be used in a script, but probably *should not* "
"be."
msgstr ""

#: ../../system.rst:270
msgid "Exemple 1. Setting a new password"
msgstr ""

#: ../../system.rst:324
msgid ""
"The **passwd** command's ``         -l        `` , ``         -u        `` ,"
" and ``         -d        `` options permit locking, unlocking, and deleting"
" a user's password. Only *root* may use these options."
msgstr ""

#: ../../system.rst:330
msgid ""
"Show users' logged in time, as read from ``         /var/log/wtmp        `` "
". This is one of the GNU accounting utilities."
msgstr ""

#: ../../system.rst:343
msgid ""
"List *last* logged in users, as read from ``         /var/log/wtmp        ``"
" . This command can also show remote logins."
msgstr ""

#: ../../system.rst:347
msgid "For example, to show the last few times the system rebooted:"
msgstr ""

#: ../../system.rst:364
msgid ""
"Change user's *group ID* without logging out. This permits access to the new"
" group's files. Since users may be members of multiple groups "
"simultaneously, this command finds only limited use."
msgstr ""

#: ../../system.rst:372
msgid ""
"Kurt Glaesemann points out that the *newgrp* command could prove helpful in "
"setting the default group permissions for files a user writes. However, the "
"`chgrp <system.html#CHGRPREF>`__ command might be more convenient for this "
"purpose."
msgstr ""

#: ../../system.rst:382
msgid "** Terminals**"
msgstr ""

#: ../../system.rst:385
msgid ""
"Echoes the name (filename) of the current user's terminal. Note that each "
"separate *xterm* window counts as a different terminal."
msgstr ""

#: ../../system.rst:397
msgid ""
"Shows and/or changes terminal settings. This complex command, used in a "
"script, can control terminal behavior and the way output displays. See the "
"info page, and study it carefully."
msgstr ""

#: ../../system.rst:403
msgid "Exemple 2. Setting an *erase* character"
msgstr ""

#: ../../system.rst:432
msgid "Exemple 3. *secret password* : Turning off terminal echoing"
msgstr ""

#: ../../system.rst:470
msgid ""
"A creative use of **stty** is detecting a user keypress (without hitting "
"**ENTER** )."
msgstr ""

#: ../../system.rst:475
msgid "Exemple 4. Keypress detection"
msgstr ""

#: ../../system.rst:503
msgid ""
"Also see `Example 9-3 <internalvariables.html#TIMEOUT>`__ and `Example A-43 "
"<contributed-scripts.html#STOPWATCH>`__ ."
msgstr ""

#: ../../system.rst:508
msgid "**terminals and modes**"
msgstr ""

#: ../../system.rst:510
msgid ""
"Normally, a terminal works in the *canonical* mode. When a user hits a key, "
"the resulting character does not immediately go to the program actually "
"running in this terminal. A buffer local to the terminal stores keystrokes. "
"When the user hits the **ENTER** key, this sends all the stored keystrokes "
"to the program running. There is even a basic line editor inside the "
"terminal."
msgstr ""

#: ../../system.rst:530
msgid ""
"Using canonical mode, it is possible to redefine the special keys for the "
"local terminal line editor."
msgstr ""

#: ../../system.rst:547
msgid ""
"The process controlling the terminal receives only 12 characters (11 "
"alphabetic ones, plus a newline), although the user hit 26 keys. In non-"
"canonical ( \"raw\" ) mode, every key hit (including special editing keys "
"such as **ctl-H** ) sends a character immediately to the controlling "
"process."
msgstr ""

#: ../../system.rst:553
msgid ""
"The Bash prompt disables both ``            icanon           `` and ``"
"            echo           `` , since it replaces the basic terminal line "
"editor with its own more elaborate one. For example, when you hit **ctl-A** "
"at the Bash prompt, there's no **^A** echoed by the terminal, but Bash gets "
"a **\\\\1** character, interprets it, and moves the cursor to the begining "
"of the line."
msgstr ""

#: ../../system.rst:560
msgid "*Stéphane Chazelas*"
msgstr ""

#: ../../system.rst:612
msgid ""
"Set certain terminal attributes. This command writes to its terminal's ``"
"         stdout        `` a string that changes the behavior of that "
"terminal."
msgstr ""

#: ../../system.rst:625
msgid ""
"The **setterm** command can be used within a script to change the appearance"
" of text written to ``         stdout        `` , although there are "
"certainly `better tools <colorizing.html#COLORIZINGREF>`__ available for "
"this purpose."
msgstr ""

#: ../../system.rst:642
msgid ""
"Show or initialize terminal settings. This is a less capable version of "
"**stty** ."
msgstr ""

#: ../../system.rst:657
msgid ""
"Set or display serial port parameters. This command must be run by *root* "
"and is usually found in a system setup script."
msgstr ""

#: ../../system.rst:671
msgid ""
"The initialization process for a terminal uses **getty** or **agetty** to "
"set it up for login by a user. These commands are not used within user shell"
" scripts. Their scripting counterpart is **stty** ."
msgstr ""

#: ../../system.rst:677
msgid ""
"Enables or disables write access to the current user's terminal. Disabling "
"access would prevent another user on the network to `write "
"<communications.html#WRITEREF>`__ to the terminal."
msgstr ""

#: ../../system.rst:683
msgid "|Tip"
msgstr ""

#: ../../system.rst:685
msgid ""
"It can be quite annoying to have a message about ordering pizza suddenly "
"appear in the middle of the text file you are editing. On a multi-user "
"network, you might therefore wish to disable write access to your terminal "
"when you need to avoid interruptions."
msgstr ""

#: ../../system.rst:694
msgid ""
"This is an acronym for \" `write <communications.html#WRITEREF>`__ all,\" "
"i.e., sending a message to all users at every terminal logged into the "
"network. It is primarily a system administrator's tool, useful, for example,"
" when warning everyone that the system will shortly go down due to a problem"
" (see `Example 19-1 <here-docs.html#EX70>`__ )."
msgstr ""

#: ../../system.rst:716
msgid ""
"If write access to a particular terminal has been disabled with **mesg** , "
"then **wall** cannot send a message to that terminal."
msgstr ""

#: ../../system.rst:724
msgid "** Information and Statistics**"
msgstr ""

#: ../../system.rst:727
msgid ""
"Output system specifications (OS, kernel version, etc.) to ``         stdout"
"        `` . Invoked with the ``         -a        `` option, gives verbose "
"system info (see `Example 16-5 <moreadv.html#EX41>`__ ). The ``         -s"
"        `` option shows only the OS type."
msgstr ""

#: ../../system.rst:750
msgid ""
"Show system architecture. Equivalent to **uname -m** . See `Example 11-27 "
"<testbranch.html#CASECMD>`__ ."
msgstr ""

#: ../../system.rst:765
msgid ""
"Gives information about previous commands, as stored in the ``         "
"/var/account/pacct        `` file. Command name and user name can be "
"specified by options. This is one of the GNU accounting utilities."
msgstr ""

#: ../../system.rst:771
msgid ""
"List the last login time of all system users. This references the ``"
"         /var/log/lastlog        `` file."
msgstr ""

#: ../../system.rst:794 ../../system.rst:2251 ../../system.rst:2368
msgid "|Caution"
msgstr ""

#: ../../system.rst:796
msgid ""
"This command will fail if the user invoking it does not have read permission"
" for the ``            /var/log/lastlog           `` file."
msgstr ""

#: ../../system.rst:803
msgid ""
"List open files. This command outputs a detailed table of all currently open"
" files and gives information about their owner, size, the processes "
"associated with them, and more. Of course, **lsof** may be piped to `grep "
"<textproc.html#GREPREF>`__ and/or `awk <awk.html#AWKREF>`__ to parse and "
"analyze its results."
msgstr ""

#: ../../system.rst:823
msgid ""
"The **lsof** command is a useful, if complex administrative tool. If you are"
" unable to dismount a filesystem and get an error message that it is still "
"in use, then running *lsof* helps determine which files are still open on "
"that filesystem. The ``         -i        `` option lists open network "
"socket files, and this can help trace intrusion or hack attempts."
msgstr ""

#: ../../system.rst:841
msgid ""
"See `Example 30-2 <networkprogramming.html#IPADDRESSES>`__ for an effective "
"use of **lsof** ."
msgstr ""

#: ../../system.rst:845
msgid ""
"**S** ystem **trace** : diagnostic and debugging tool for tracing *system "
"calls* and signals. This command and **ltrace** , following, are useful for "
"diagnosing why a given program or package fails to run . . . perhaps due to "
"missing libraries or related causes."
msgstr ""

#: ../../system.rst:863
msgid "This is the Linux equivalent of the Solaris **truss** command."
msgstr ""

#: ../../system.rst:866
msgid ""
"**L** ibrary **trace** : diagnostic and debugging tool that traces *library "
"calls* invoked by a given command."
msgstr ""

#: ../../system.rst:886
msgid ""
"The **nc** ( *netcat* ) utility is a complete toolkit for connecting to and "
"listening to TCP and UDP ports. It is useful as a diagnostic and testing "
"tool and as a component in simple script-based HTTP clients and servers."
msgstr ""

#: ../../system.rst:900
msgid "A real-life `usage example <process-sub.html#NETCATEXAMPLE>`__ ."
msgstr ""

#: ../../system.rst:904
msgid "Exemple 5. Checking a remote server for *identd*"
msgstr ""

#: ../../system.rst:980
msgid ""
"And, of course, there's Dr. Andrew Tridgell's notorious one-line script in "
"the BitKeeper Affair:"
msgstr ""

#: ../../system.rst:991
msgid ""
"Shows memory and cache usage in tabular form. The output of this command "
"lends itself to parsing, using `grep <textproc.html#GREPREF>`__ , `awk "
"<awk.html#AWKREF>`__ or **Perl** . The **procinfo** command shows all the "
"information that **free** does, and much more."
msgstr ""

#: ../../system.rst:1008
msgid "To show unused RAM memory:"
msgstr ""

#: ../../system.rst:1019
msgid ""
"Extract and list information and statistics from the ``          /proc"
"         `` pseudo-filesystem <devproc.html#DEVPROCREF>`__ . This gives a "
"very extensive and detailed listing."
msgstr ""

#: ../../system.rst:1033
msgid "List devices, that is, show installed hardware."
msgstr ""

#: ../../system.rst:1053
msgid ""
"Show (disk) file usage, recursively. Defaults to current working directory, "
"unless otherwise specified."
msgstr ""

#: ../../system.rst:1069
msgid "Shows filesystem usage in tabular form."
msgstr ""

#: ../../system.rst:1083
msgid ""
"Lists all system bootup messages to ``         stdout        `` . Handy for "
"debugging and ascertaining which device drivers were installed and which "
"system interrupts in use. The output of **dmesg** may, of course, be parsed "
"with `grep <textproc.html#GREPREF>`__ , `sed <sedawk.html#SEDREF>`__ , or "
"`awk <awk.html#AWKREF>`__ from within a script."
msgstr ""

#: ../../system.rst:1103
msgid ""
"Gives detailed and verbose *stat* istics on a given file (even a directory "
"or device file) or set of files."
msgstr ""

#: ../../system.rst:1121
msgid "If the target file does not exist, **stat** returns an error message."
msgstr ""

#: ../../system.rst:1133
msgid ""
"In a script, you can use **stat** to extract information about files (and "
"filesystems) and set variables accordingly."
msgstr ""

#: ../../system.rst:1177
msgid "Display virtual memory statistics."
msgstr ""

#: ../../system.rst:1191
msgid ""
"Shows how long the system has been running, along with associated "
"statistics."
msgstr ""

#: ../../system.rst:1206
msgid ""
"A *load average* of 1 or less indicates that the system handles processes "
"immediately. A load average greater than 1 means that processes are being "
"queued. When the load average gets above 3 (on a single-core processor), "
"then system performance is significantly degraded."
msgstr ""

#: ../../system.rst:1216
msgid ""
"Lists the system's host name. This command sets the host name in an ``"
"         /etc/rc.d        `` setup script ( ``         /etc/rc.d/rc.sysinit"
"        `` or similar). It is equivalent to **uname -n** , and a counterpart"
" to the `$HOSTNAME <internalvariables.html#HOSTNAMEREF>`__ internal "
"variable."
msgstr ""

#: ../../system.rst:1234
msgid ""
"Similar to the **hostname** command are the **domainname** , "
"**dnsdomainname** , **nisdomainname** , and **ypdomainname** commands. Use "
"these to display or set the system DNS or NIS/YP domain name. Various "
"options to **hostname** also perform these functions."
msgstr ""

#: ../../system.rst:1241
msgid "Echo a 32-bit hexadecimal numerical identifier for the host machine."
msgstr ""

#: ../../system.rst:1255
msgid ""
"This command allegedly fetches a \"unique\" serial number for a particular "
"system. Certain product registration procedures use this number to brand a "
"particular user license. Unfortunately, **hostid** only returns the machine "
"network address in hexadecimal, with pairs of bytes transposed."
msgstr ""

#: ../../system.rst:1261
msgid ""
"The network address of a typical non-networked Linux machine, is found in ``"
"            /etc/hosts           `` ."
msgstr ""

#: ../../system.rst:1269
msgid "n localhost"
msgstr ""

#: ../../system.rst:1272
msgid ""
"As it happens, transposing the bytes of ``                         127.0.0.1"
"                       `` , we get ``                         0.127.1.0"
"                       `` , which translates in hex to ``"
"                         007f0100                       `` , the exact "
"equivalent of what **hostid** returns, above. There exist only a few million"
" other Linux machines with this identical *hostid* ."
msgstr ""

#: ../../system.rst:1296
msgid ""
"Invoking **sar** (System Activity Reporter) gives a very detailed rundown on"
" system statistics. The Santa Cruz Operation ( \"Old\" SCO) released **sar**"
" as Open Source in June, 1999."
msgstr ""

#: ../../system.rst:1300
msgid ""
"This command is not part of the base Linux distribution, but may be obtained"
" as part of the `sysstat utilities "
"<http://perso.wanadoo.fr/sebastien.godard/>`__ package, written by "
"`Sebastien Godard <mailto:sebastien.godard@wanadoo.fr>`__ ."
msgstr ""

#: ../../system.rst:1330
msgid ""
"Show information and statistics about a designated *elf* binary. This is "
"part of the *binutils* package."
msgstr ""

#: ../../system.rst:1350
msgid ""
"The **size [/path/to/binary]** command gives the segment sizes of a binary "
"executable or archive file. This is mainly of use to programmers."
msgstr ""

#: ../../system.rst:1366
msgid "** System Logs**"
msgstr ""

#: ../../system.rst:1369
msgid ""
"Appends a user-generated message to the system log ( ``         "
"/var/log/messages        `` ). You do not have to be *root* to invoke "
"**logger** ."
msgstr ""

#: ../../system.rst:1381
msgid ""
"By embedding a **logger** command in a script, it is possible to write "
"debugging information to ``         /var/log/messages        `` ."
msgstr ""

#: ../../system.rst:1399
msgid ""
"This utility manages the system log files, rotating, compressing, deleting, "
"and/or e-mailing them, as appropriate. This keeps the ``         /var/log"
"        `` from getting cluttered with old log files. Usually `cron "
"<system.html#CRONREF>`__ runs **logrotate** on a daily basis."
msgstr ""

#: ../../system.rst:1405
msgid ""
"Adding an appropriate entry to ``         /etc/logrotate.conf        `` "
"makes it possible to manage personal log files, as well as system-wide ones."
msgstr ""

#: ../../system.rst:1413
msgid ""
"Stefano Falsetto has created `rottlog "
"<http://www.gnu.org/software/rottlog/>`__ , which he considers to be an "
"improved version of **logrotate** ."
msgstr ""

#: ../../system.rst:1422
msgid "** Job Control**"
msgstr ""

#: ../../system.rst:1425
msgid ""
"``                   P                 `` rocess ``                   S"
"                 `` tatistics: lists currently executing processes by owner "
"and PID (process ID). This is usually invoked with ``         ax        `` "
"or ``         aux        `` options, and may be piped to `grep "
"<textproc.html#GREPREF>`__ or `sed <sedawk.html#SEDREF>`__ to search for a "
"specific process (see `Example 15-14 <internal.html#EX44>`__ and `Example "
"29-3 <procref1.html#PIDID>`__ )."
msgstr ""

#: ../../system.rst:1442
msgid ""
"To display system processes in graphical \"tree\" format: **ps afjx** or "
"**ps ax --forest** ."
msgstr ""

#: ../../system.rst:1446
msgid ""
"Combining the **ps** command with `grep <textproc.html#GREPREF>`__ or `kill "
"<x9644.html#KILLREF>`__ ."
msgstr ""

#: ../../system.rst:1471
msgid ""
"Compare the action of **pkill** with `killall <x9644.html#KILLALLREF>`__ ."
msgstr ""

#: ../../system.rst:1475
msgid ""
"Lists currently executing processes in \"tree\" format. The ``         -p"
"        `` option shows the PIDs, as well as the process names."
msgstr ""

#: ../../system.rst:1480
msgid ""
"Continuously updated display of most cpu-intensive processes. The ``"
"         -b        `` option displays in text mode, so that the output may "
"be parsed or accessed from a script."
msgstr ""

#: ../../system.rst:1503
msgid "**nice**"
msgstr ""

#: ../../system.rst:1505
msgid ""
"Run a background job with an altered priority. Priorities run from 19 "
"(lowest) to -20 (highest). Only *root* may set the negative (higher) "
"priorities. Related commands are **renice** and **snice** , which change the"
" priority of a running process or processes, and **skill** , which sends a "
"`kill <x9644.html#KILLREF>`__ signal to a process or processes."
msgstr ""

#: ../../system.rst:1513
msgid ""
"Keeps a command running even after user logs off. The command will run as a "
"foreground process unless followed by & . If you use **nohup** within a "
"script, consider coupling it with a `wait <x9644.html#WAITREF>`__ to avoid "
"creating an *orphan* or `zombie <x9644.html#ZOMBIEREF>`__ process."
msgstr ""

#: ../../system.rst:1520
msgid ""
"Identifies *process ID (PID)* of a running job. Since job control commands, "
"such as `kill <x9644.html#KILLREF>`__ and `renice <system.html#NICE2REF>`__ "
"act on the *PID* of a process (not its name), it is sometimes necessary to "
"identify that *PID* . The **pidof** command is the approximate counterpart "
"to the `$PPID <internalvariables.html#PPIDREF>`__ internal variable."
msgstr ""

#: ../../system.rst:1538
msgid "Exemple 6. *pidof* helps kill a process"
msgstr ""

#: ../../system.rst:1583
msgid ""
"Identifies the processes (by PID) that are accessing a given file, set of "
"files, or directory. May also be invoked with the ``         -k        `` "
"option, which kills those processes. This has interesting implications for "
"system security, especially in scripts preventing unauthorized users from "
"accessing system services."
msgstr ""

#: ../../system.rst:1604
msgid ""
"One important application for **fuser** is when physically inserting or "
"removing storage media, such as CD ROM disks or USB flash drives. Sometimes "
"trying a `umount <system.html#UMOUNTREF>`__ fails with a device is busy "
"error message. This means that some user(s) and/or process(es) are accessing"
" the device. An **fuser -um /dev/device\\_name** will clear up the mystery, "
"so you can kill any relevant processes."
msgstr ""

#: ../../system.rst:1629
msgid ""
"The **fuser** command, invoked with the ``         -n        `` option "
"identifies the processes accessing a *port* . This is especially useful in "
"combination with `nmap <system.html#NMAPREF>`__ ."
msgstr ""

#: ../../system.rst:1653
msgid ""
"Administrative program scheduler, performing such duties as cleaning up and "
"deleting system log files and updating the slocate database. This is the "
"*superuser* version of `at <timedate.html#ATREF>`__ (although each user may "
"have their own ``         crontab        `` file which can be changed with "
"the **crontab** command). It runs as a `daemon "
"<communications.html#DAEMONREF>`__ and executes scheduled entries from ``"
"         /etc/crontab        `` ."
msgstr ""

#: ../../system.rst:1665
msgid ""
"Some flavors of Linux run **crond** , Matthew Dillon's version of **cron** ."
msgstr ""

#: ../../system.rst:1673
msgid "** Process Control and Booting**"
msgstr ""

#: ../../system.rst:1675
msgid "**init**"
msgstr ""

#: ../../system.rst:1677
msgid ""
"The **init** command is the `parent <internal.html#FORKREF>`__ of all "
"processes. Called in the final step of a bootup, **init** determines the "
"runlevel of the system from ``         /etc/inittab        `` . Invoked by "
"its alias **telinit** , and by *root* only."
msgstr ""

#: ../../system.rst:1684
msgid ""
"Symlinked to **init** , this is a means of changing the system runlevel, "
"usually done for system maintenance or emergency filesystem repairs. Invoked"
" only by *root* . This command can be dangerous -- be certain you understand"
" it well before using!"
msgstr ""

#: ../../system.rst:1690
msgid ""
"Shows the current and last runlevel, that is, whether the system is halted "
"(runlevel ``         0        `` ), in single-user mode ( ``         1"
"        `` ), in multi-user mode ( ``         2        `` or ``         3"
"        `` ), in X Windows ( ``         5        `` ), or rebooting ( ``"
"         6        `` ). This command accesses the ``         /var/run/utmp"
"        `` file."
msgstr ""

#: ../../system.rst:1698
msgid ""
"Command set to shut the system down, usually just prior to a power down."
msgstr ""

#: ../../system.rst:1703 ../../system.rst:2196 ../../system.rst:2228
msgid "|Warning"
msgstr ""

#: ../../system.rst:1705
msgid ""
"On some Linux distros, the **halt** command has 755 permissions, so it can "
"be invoked by a non-root user. A careless *halt* in a terminal or a script "
"may shut down the system!"
msgstr ""

#: ../../system.rst:1713
msgid ""
"Starts or stops a system *service* . The startup scripts in ``         "
"/etc/init.d        `` and ``         /etc/rc.d        `` use this command to"
" start services at bootup."
msgstr ""

#: ../../system.rst:1730
msgid "** Network**"
msgstr ""

#: ../../system.rst:1733
msgid ""
"**N** etwork **map** per and port scanner. This command scans a server to "
"locate open ports and the services associated with those ports. It can also "
"report information about packet filters and firewalls. This is an important "
"security tool for locking down a network against hacking attempts."
msgstr ""

#: ../../system.rst:1758
msgid "Network *interface configuration* and tuning utility."
msgstr ""

#: ../../system.rst:1774
msgid ""
"The **ifconfig** command is most often used at bootup to set up the "
"interfaces, or to shut them down when rebooting."
msgstr ""

#: ../../system.rst:1811
msgid "See also `Example 32-6 <debugging.html#ONLINE>`__ ."
msgstr ""

#: ../../system.rst:1814
msgid ""
"Show current network statistics and information, such as routing tables and "
"active connections. This utility accesses information in ``         "
"/proc/net        `` ( `Chapter 29 <devproc.html>`__ ). See `Example 29-4 "
"<procref1.html#CONSTAT>`__ ."
msgstr ""

#: ../../system.rst:1819
msgid "**netstat -r** is equivalent to `route <system.html#ROUTEREF>`__ ."
msgstr ""

#: ../../system.rst:1840
msgid ""
"A **netstat -lptu** shows `sockets <devref1.html#SOCKETREF>`__ that are "
"listening to ports, and the associated processes. This can be useful for "
"determining whether a computer has been hacked or compromised."
msgstr ""

#: ../../system.rst:1849
msgid ""
"This is the command set for configuring a wireless network. It is the "
"wireless equivalent of **ifconfig** , above."
msgstr ""

#: ../../system.rst:1853
msgid ""
"General purpose utility for setting up, changing, and analyzing *IP* "
"(Internet Protocol) networks and attached devices. This command is part of "
"the *iproute2* package."
msgstr ""

#: ../../system.rst:1875
msgid "Or, in a script:"
msgstr ""

#: ../../system.rst:1915
msgid "Show info about or make changes to the kernel routing table."
msgstr ""

#: ../../system.rst:1930
msgid ""
"The **iptables** command set is a packet filtering tool used mainly for such"
" security purposes as setting up network firewalls. This is a complex tool, "
"and a detailed explanation of its use is beyond the scope of this document. "
"`Oskar Andreasson's tutorial <http://www.frozentux.net/iptables-tutorial"
"/iptables-tutorial.html>`__ is a reasonable starting point."
msgstr ""

#: ../../system.rst:1937
msgid ""
"See also `shutting down *iptables* <system.html#IPTABLES01>`__ and `Example "
"30-2 <networkprogramming.html#IPADDRESSES>`__ ."
msgstr ""

#: ../../system.rst:1941
msgid ""
"Check network and system configuration. This command lists and manages the "
"network and system services started at bootup in the ``         /etc/rc?.d"
"        `` directory."
msgstr ""

#: ../../system.rst:1945
msgid ""
"Originally a port from IRIX to Red Hat Linux, **chkconfig** may not be part "
"of the core installation of some Linux flavors."
msgstr ""

#: ../../system.rst:1960
msgid ""
"Network packet \"sniffer.\" This is a tool for analyzing and troubleshooting"
" traffic on a network by dumping packet headers that match specified "
"criteria."
msgstr ""

#: ../../system.rst:1964
msgid "Dump ip packet traffic between hosts *bozoville* and *caduceus* :"
msgstr ""

#: ../../system.rst:1974
msgid ""
"Of course, the output of **tcpdump** can be parsed with certain of the "
"previously discussed `text processing utilities "
"<textproc.html#TPCOMMANDLISTING1>`__ ."
msgstr ""

#: ../../system.rst:1980
msgid "** Filesystem**"
msgstr ""

#: ../../system.rst:1983
msgid ""
"Mount a filesystem, usually on an external device, such as a floppy or "
"CDROM. The file ``         /etc/fstab        `` provides a handy listing of "
"available filesystems, partitions, and devices, including options, that may "
"be automatically or manually mounted. The file ``         /etc/mtab        "
"`` shows the currently mounted filesystems and partitions (including the "
"virtual ones, such as ``         /proc        `` )."
msgstr ""

#: ../../system.rst:1991
msgid ""
"**mount -a** mounts all filesystems and partitions listed in ``         "
"/etc/fstab        `` , except those with a ``         noauto        `` "
"option. At bootup, a startup script in ``         /etc/rc.d        `` ( ``"
"         rc.sysinit        `` or something similar) invokes this to get "
"everything mounted."
msgstr ""

#: ../../system.rst:2007
msgid ""
"The versatile *mount* command can even mount an ordinary file on a block "
"device, and the file will act as if it were a filesystem. *Mount* "
"accomplishes that by associating the file with a `loopback device "
"<devref1.html#LOOPBACKREF>`__ . One application of this is to mount and "
"examine an ISO9660 filesystem image before burning it onto a CDR. ` [3]  "
"<system.html#FTN.AEN16255>`__"
msgstr ""

#: ../../system.rst:2016
msgid "Exemple 7. Checking a CD image"
msgstr ""

#: ../../system.rst:2035
msgid ""
"Unmount a currently mounted filesystem. Before physically removing a "
"previously mounted floppy or CDROM disk, the device must be **umount** ed, "
"else filesystem corruption may result."
msgstr ""

#: ../../system.rst:2051
msgid ""
"The **automount** utility, if properly installed, can mount and unmount "
"floppies or CDROM disks as they are accessed or removed. On \"multispindle\""
" laptops with swappable floppy and optical drives, this can cause problems, "
"however."
msgstr ""

#: ../../system.rst:2060
msgid ""
"The newer Linux distros have deprecated **mount** and **umount** . The "
"successor, for command-line mounting of removable storage devices, is "
"**gnome-mount** . It can take the ``         -d        `` option to mount a "
"`device file <devref1.html#DEVFILEREF>`__ by its listing in ``         /dev"
"        `` ."
msgstr ""

#: ../../system.rst:2067
msgid "For example, to mount a USB flash drive:"
msgstr ""

#: ../../system.rst:2084
msgid ""
"Forces an immediate write of all updated data from buffers to hard drive "
"(synchronize drive with buffers). While not strictly necessary, a **sync** "
"assures the sys admin or user that the data just changed will survive a "
"sudden power failure. In the olden days, a ``                   sync;"
"           sync                 `` (twice, just to make absolutely sure) was"
" a useful precautionary measure before a system reboot."
msgstr ""

#: ../../system.rst:2092
msgid ""
"At times, you may wish to force an immediate buffer flush, as when securely "
"deleting a file (see `Example 16-61 <extmisc.html#BLOTOUT>`__ ) or when the "
"lights begin to flicker."
msgstr ""

#: ../../system.rst:2098
msgid ""
"Sets up and configures `loopback devices <devref1.html#LOOPBACKREF>`__ ."
msgstr ""

#: ../../system.rst:2103
msgid "Exemple 8. Creating a filesystem in a file"
msgstr ""

#: ../../system.rst:2121
msgid ""
"Creates a swap partition or file. The swap area must subsequently be enabled"
" with **swapon** ."
msgstr ""

#: ../../system.rst:2125
msgid ""
"Enable / disable swap partitition or file. These commands usually take "
"effect at bootup and shutdown."
msgstr ""

#: ../../system.rst:2129
msgid ""
"Create a Linux *ext2* filesystem. This command must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2134
msgid "Exemple 9. Adding a new hard drive"
msgstr ""

#: ../../system.rst:2184
msgid ""
"See also `Example 17-8 <system.html#CREATEFS>`__ and `Example 31-3 "
"<zeros.html#RAMDISK>`__ ."
msgstr ""

#: ../../system.rst:2188
msgid "Create a DOS *FAT* filesystem."
msgstr ""

#: ../../system.rst:2191
msgid ""
"Tune *ext2* filesystem. May be used to change filesystem parameters, such as"
" maximum mount count. This must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2198
msgid ""
"This is an extremely dangerous command. Use it at your own risk, as you may "
"inadvertently destroy your filesystem."
msgstr ""

#: ../../system.rst:2205
msgid ""
"Dump (list to ``         stdout        `` ) very verbose filesystem info. "
"This must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2219
msgid ""
"List or change hard disk parameters. This command must be invoked as *root* "
", and it may be dangerous if misused."
msgstr ""

#: ../../system.rst:2223
msgid ""
"Create or change a partition table on a storage device, usually a hard "
"drive. This command must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2230
msgid ""
"Use this command with extreme caution. If something goes wrong, you may "
"destroy an existing filesystem."
msgstr ""

#: ../../system.rst:2237
msgid "Filesystem check, repair, and debug command set."
msgstr ""

#: ../../system.rst:2239
msgid ""
"**fsck** : a front end for checking a UNIX filesystem (may invoke other "
"utilities). The actual filesystem type generally defaults to *ext2* ."
msgstr ""

#: ../../system.rst:2243
msgid "**e2fsck** : ext2 filesystem checker."
msgstr ""

#: ../../system.rst:2245
msgid ""
"**debugfs** : ext2 filesystem debugger. One of the uses of this versatile, "
"but dangerous command is to (attempt to) recover deleted files. For advanced"
" users only!"
msgstr ""

#: ../../system.rst:2253
msgid ""
"All of these should be invoked as *root* , and they can damage or destroy a "
"filesystem if misused."
msgstr ""

#: ../../system.rst:2260
msgid ""
"Checks for bad blocks (physical media flaws) on a storage device. This "
"command finds use when formatting a newly installed hard drive or testing "
"the integrity of backup media. ` [4]"
msgstr ""

#: ../../system.rst:2263
msgid "<system.html#FTN.AEN16504>`__ As an example, **badblocks /dev/fd0**"
msgstr ""

#: ../../system.rst:2264
msgid "tests a floppy disk."
msgstr ""

#: ../../system.rst:2266
msgid ""
"The **badblocks** command may be invoked destructively (overwrite all data) "
"or in non-destructive read-only mode. If *root user* owns the device to be "
"tested, as is generally the case, then *root* must invoke this command."
msgstr ""

#: ../../system.rst:2272
msgid ""
"The **lsusb** command lists all USB (Universal Serial Bus) buses and the "
"devices hooked up to them."
msgstr ""

#: ../../system.rst:2275
msgid ""
"The **usbmodules** command outputs information about the driver modules for "
"connected USB devices."
msgstr ""

#: ../../system.rst:2300
msgid "Lists *pci* busses present."
msgstr ""

#: ../../system.rst:2321
msgid ""
"Creates a boot floppy which can be used to bring up the system if, for "
"example, the MBR (master boot record) becomes corrupted. Of special interest"
" is the ``         --iso        `` option, which uses **mkisofs** to create "
"a bootable *ISO9660* filesystem image suitable for burning a bootable CDR."
msgstr ""

#: ../../system.rst:2327
msgid ""
"The **mkbootdisk** command is actually a Bash script, written by Erik Troan,"
" in the ``         /sbin        `` directory."
msgstr ""

#: ../../system.rst:2331
msgid "Creates an *ISO9660* filesystem suitable for a CDR image."
msgstr ""

#: ../../system.rst:2334
msgid ""
"CHange ROOT directory. Normally commands are fetched from `$PATH "
"<internalvariables.html#PATHREF>`__ , relative to ``         /        `` , "
"the default *root directory* . This changes the *root* directory to a "
"different one (and also changes the working directory to there). This is "
"useful for security purposes, for instance when the system administrator "
"wishes to restrict certain users, such as those `telnetting "
"<communications.html#TELNETREF>`__ in, to a secured portion of the "
"filesystem (this is sometimes referred to as confining a guest user to a "
"\"chroot jail\" ). Note that after a **chroot** , the execution path for "
"system binaries is no longer valid."
msgstr ""

#: ../../system.rst:2347
msgid ""
"A ``                   chroot /opt                 `` would cause references"
" to ``         /usr/bin        `` to be translated to ``         "
"/opt/usr/bin        `` . Likewise, ``                   chroot /aaa/bbb "
"/bin/ls                 `` would redirect future instances of **ls** to ``"
"         /aaa/bbb        `` as the base directory, rather than ``         /"
"        `` as is normally the case. An **alias XX 'chroot /aaa/bbb ls'** in "
"a user's ``          ~/.bashrc         `` <sample-bashrc.html>`__ "
"effectively restricts which portion of the filesystem she may run command "
"\"XX\" on."
msgstr ""

#: ../../system.rst:2359
msgid ""
"The **chroot** command is also handy when running from an emergency boot "
"floppy ( **chroot** to ``         /dev/fd0        `` ), or as an option to "
"**lilo** when recovering from a system crash. Other uses include "
"installation from a different filesystem (an `rpm "
"<filearchiv.html#RPMREF>`__ option) or running a readonly filesystem from a "
"CD ROM. Invoke only as *root* , and use with care."
msgstr ""

#: ../../system.rst:2370
msgid ""
"It might be necessary to copy certain system files to a *chrooted* "
"directory, since the normal ``            $PATH           `` can no longer "
"be relied upon."
msgstr ""

#: ../../system.rst:2378
msgid ""
"This utility is part of the **procmail** package ( `www.procmail.org "
"<http://www.procmail.org>`__ ). It creates a *lock file* , a *semaphore* "
"that controls access to a file, device, or resource."
msgstr ""

#: ../../system.rst:2385
msgid "``                         Definition:                       `` A"
msgstr ""

#: ../../system.rst:2386
msgid ""
"*semaphore* is a flag or signal. (The usage originated in railroading, where"
" a colored flag, lantern, or striped movable arm *semaphore* indicated "
"whether a particular track was in use and therefore unavailable for another "
"train.) A UNIX process can check the appropriate semaphore to determine "
"whether a particular resource is available/accessible."
msgstr ""

#: ../../system.rst:2396
msgid ""
"The lock file serves as a flag that this particular file, device, or "
"resource is in use by a process (and is therefore \"busy\" ). The presence "
"of a lock file permits only restricted access (or no access) to other "
"processes."
msgstr ""

#: ../../system.rst:2412
msgid ""
"Lock files are used in such applications as protecting system mail folders "
"from simultaneously being changed by multiple users, indicating that a modem"
" port is being accessed, and showing that an instance of Firefox is using "
"its cache. Scripts may check for the existence of a lock file created by a "
"certain process to check if that process is running. Note that if a script "
"attempts to create a lock file that already exists, the script will likely "
"hang."
msgstr ""

#: ../../system.rst:2420
msgid ""
"Normally, applications create and check for lock files in the ``         "
"/var/lock        `` directory. ` [5]"
msgstr ""

#: ../../system.rst:2422
msgid "<system.html#FTN.AEN16659>`__ A script can test for the presence of"
msgstr ""

#: ../../system.rst:2423
msgid "a lock file by something like the following."
msgstr ""

#: ../../system.rst:2439
msgid ""
"Much less useful than the **lockfile** command is **flock** . It sets an "
"\"advisory\" lock on a file and then executes a command while the lock is "
"on. This is to prevent any other process from setting a lock on that file "
"until completion of the specified command."
msgstr ""

#: ../../system.rst:2457
msgid ""
"Unlike **lockfile** , **flock** does *not* automatically create a lock file."
msgstr ""

#: ../../system.rst:2464
msgid ""
"Creates block or character `device files <devref1.html#DEVFILEREF>`__ (may "
"be necessary when installing new hardware on the system). The **MAKEDEV** "
"utility has virtually all of the functionality of **mknod** , and is easier "
"to use."
msgstr ""

#: ../../system.rst:2470
msgid ""
"Utility for creating device files. It must be run as *root* , and in the ``"
"         /dev        `` directory. It is a sort of advanced version of "
"**mknod** ."
msgstr ""

#: ../../system.rst:2475
msgid ""
"Automatically deletes files which have not been accessed within a specified "
"period of time. Usually invoked by `cron <system.html#CRONREF>`__ to remove "
"stale log files."
msgstr ""

#: ../../system.rst:2481
msgid "** Backup**"
msgstr ""

#: ../../system.rst:2484
msgid ""
"The **dump** command is an elaborate filesystem backup utility, generally "
"used on larger installations and networks. ` [6]"
msgstr ""

#: ../../system.rst:2486
msgid "<system.html#FTN.AEN16748>`__ It reads raw disk partitions and"
msgstr ""

#: ../../system.rst:2487
msgid ""
"writes a backup file in a binary format. Files to be backed up may be saved "
"to a variety of storage media, including disks and tape drives. The "
"**restore** command restores backups made with **dump** ."
msgstr ""

#: ../../system.rst:2493
msgid ""
"Perform a low-level format on a floppy disk ( ``         /dev/fd0*        ``"
" )."
msgstr ""

#: ../../system.rst:2498
msgid "** System Resources**"
msgstr ""

#: ../../system.rst:2501
msgid ""
"Sets an *upper limit* on use of system resources. Usually invoked with the "
"``         -f        `` option, which sets a limit on file size ( **ulimit "
"-f 1000** limits files to 1 meg maximum). ` [7]"
msgstr ""

#: ../../system.rst:2504
msgid "<system.html#FTN.AEN16782>`__ The ``         -t        `` option"
msgstr ""

#: ../../system.rst:2505
msgid ""
"limits the coredump size ( **ulimit -c 0** eliminates coredumps). Normally, "
"the value of **ulimit** would be set in ``         /etc/profile        `` "
"and/or ``         ~/.bash_profile        `` (see `Appendix H <files.html>`__"
" )."
msgstr ""

#: ../../system.rst:2513
msgid "|Important"
msgstr ""

#: ../../system.rst:2515
msgid ""
"Judicious use of **ulimit** can protect a system against the dreaded *fork "
"bomb* ."
msgstr ""

#: ../../system.rst:2524
msgid "# Run it at your own"
msgstr ""

#: ../../system.rst:2525
msgid "peril -- it WILL freeze your system."
msgstr ""

#: ../../system.rst:2528
msgid "while true  #  Endle"
msgstr ""

#: ../../system.rst:2531
msgid "$0 &      #  This"
msgstr ""

#: ../../system.rst:2532
msgid "script invokes itself . . ."
msgstr ""

#: ../../system.rst:2534
msgid "#+ forks"
msgstr ""

#: ../../system.rst:2535
msgid "an infinite number of t"
msgstr ""

#: ../../system.rst:2537
msgid "#+ until"
msgstr ""

#: ../../system.rst:2538
msgid "the system freezes up b"
msgstr ""

#: ../../system.rst:2539
msgid "ecause all resources exh austed."
msgstr ""

#: ../../system.rst:2541
msgid "done        #  This"
msgstr ""

#: ../../system.rst:2542
msgid "is the notorious \"sorcer er's appentice\" scenario ."
msgstr ""

#: ../../system.rst:2546
msgid "exit 0      #  Will"
msgstr ""

#: ../../system.rst:2547
msgid "not exit here, because t his script will never te rminate."
msgstr ""

#: ../../system.rst:2552
msgid ""
"A **ulimit -Hu XX** (where *XX* is the user process limit) in ``            "
"/etc/profile           `` would abort this script when it exceeded the "
"preset limit."
msgstr ""

#: ../../system.rst:2592
msgid "Display user or group disk quotas."
msgstr ""

#: ../../system.rst:2595
msgid "Set user or group disk quotas from the command-line."
msgstr ""

#: ../../system.rst:2598
msgid ""
"User file creation permissions *mask* . Limit the default file attributes "
"for a particular user. All files created by that user take on the attributes"
" specified by **umask** . The (octal) value passed to **umask** defines the "
"file permissions *disabled* . For example, **umask 022** ensures that new "
"files will have at most 755 permissions (777 NAND 022). ` [8]  "
"<system.html#FTN.AEN16847>`__ Of course, the user may later change the "
"attributes of particular files with `chmod <basic.html#CHMODREF>`__ . The "
"usual practice is to set the value of **umask** in ``         /etc/profile"
"        `` and/or ``         ~/.bash_profile        `` (see `Appendix H "
"<files.html>`__ )."
msgstr ""

#: ../../system.rst:2612
msgid "Exemple 10. Using *umask* to hide an output file from prying eyes"
msgstr ""

#: ../../system.rst:2641
msgid ""
"Get info about or make changes to root device, swap space, or video mode. "
"The functionality of **rdev** has generally been taken over by **lilo** , "
"but **rdev** remains useful for setting up a ram disk. This is a dangerous "
"command, if misused."
msgstr ""

#: ../../system.rst:2648
msgid "** Modules**"
msgstr ""

#: ../../system.rst:2651
msgid "List installed kernel modules."
msgstr ""

#: ../../system.rst:2677
msgid "Doing a **cat /proc/modules** gives the same information."
msgstr ""

#: ../../system.rst:2683
msgid ""
"Force installation of a kernel module (use **modprobe** instead, when "
"possible). Must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2687
msgid "Force unloading of a kernel module. Must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2690
msgid ""
"Module loader that is normally invoked automatically in a startup script. "
"Must be invoked as *root* ."
msgstr ""

#: ../../system.rst:2694
msgid "Creates module dependency file. Usually invoked from a startup script."
msgstr ""

#: ../../system.rst:2698
msgid "Output information about a loadable module."
msgstr ""

#: ../../system.rst:2714
msgid "** Miscellaneous**"
msgstr ""

#: ../../system.rst:2717
msgid ""
"Runs a program or script with certain `environmental variables "
"<othertypesv.html#ENVREF>`__ set or changed (without changing the overall "
"system environment). The ``         [varname=xxx]        `` permits changing"
" the environmental variable ``         varname        `` for the duration of"
" the script. With no options specified, this command lists all the "
"environmental variable settings. ` [9]"
msgstr ""

#: ../../system.rst:2724
msgid "<system.html#FTN.AEN16975>`__"
msgstr ""

#: ../../system.rst:2730
msgid "The first line of a script (the \"sha-bang\" line) may use **env**"
msgstr ""

#: ../../system.rst:2731
msgid "when the path to the shell or interpreter is unknown."
msgstr ""

#: ../../system.rst:2739
msgid "print \"even when I d"
msgstr ""

#: ../../system.rst:2740
msgid "on't know where to find Perl.\\n\";"
msgstr ""

#: ../../system.rst:2743
msgid "# Good for portable"
msgstr ""

#: ../../system.rst:2745
msgid "# where the Perl bin"
msgstr ""

#: ../../system.rst:2746
msgid "aries may not be in the expected place."
msgstr ""

#: ../../system.rst:2748
msgid "# Thanks, S.C."
msgstr ""

#: ../../system.rst:2751
msgid "Or even ..."
msgstr ""

#: ../../system.rst:2757
msgid "enviromental variable fo r the location of bash."
msgstr ""

#: ../../system.rst:2759
msgid "# Therefore ... # This script will r"
msgstr ""

#: ../../system.rst:2761
msgid "un where Bash is not in its usual place, in /bin ."
msgstr ""

#: ../../system.rst:2764
msgid "..."
msgstr ""

#: ../../system.rst:2813
msgid "Show shared lib dependencies for an executable file."
msgstr ""

#: ../../system.rst:2825
msgid "Run a command repeatedly, at specified time intervals."
msgstr ""

#: ../../system.rst:2827
msgid ""
"The default is two-second intervals, but this may be changed with the ``"
"         -n        `` option."
msgstr ""

#: ../../system.rst:2842
msgid ""
"Unfortunately, `piping <special-chars.html#PIPEREF>`__ the output of **watch"
" command** to `grep <textproc.html#GREPREF>`__ does not work."
msgstr ""

#: ../../system.rst:2849
msgid ""
"Remove the debugging symbolic references from an executable binary. This "
"decreases its size, but makes debugging it impossible."
msgstr ""

#: ../../system.rst:2852
msgid ""
"This command often occurs in a `Makefile <filearchiv.html#MAKEFILEREF>`__ , "
"but rarely in a shell script."
msgstr ""

#: ../../system.rst:2857
msgid "List symbols in an unstripped compiled binary."
msgstr ""

#: ../../system.rst:2860
msgid "Command-line tool for manipulating the root window of the screen."
msgstr ""

#: ../../system.rst:2864
msgid ""
"Exemple 11. *Backlight* : changes the brightness of the (laptop) screen "
"backlight"
msgstr ""

#: ../../system.rst:3003
msgid ""
"Remote distribution client: synchronizes, clones, or backs up a file system "
"on a remote server."
msgstr ""

#: ../../system.rst:3009
msgid "Notes"
msgstr ""

#: ../../system.rst:3012
msgid "` [1]  <system.html#AEN14695>`__"
msgstr ""

#: ../../system.rst:3014
msgid "This is the case on a Linux machine or a UNIX system with disk quotas."
msgstr ""

#: ../../system.rst:3017
msgid "` [2]  <system.html#AEN14727>`__"
msgstr ""

#: ../../system.rst:3019
msgid ""
"The **userdel** command will fail if the particular user being deleted is "
"still logged on."
msgstr ""

#: ../../system.rst:3023
msgid "` [3]  <system.html#AEN16255>`__"
msgstr ""

#: ../../system.rst:3025
msgid ""
"For more detail on burning CDRs, see Alex Withers' article, `Creating CDs "
"<http://www2.linuxjournal.com/lj-issues/issue66/3335.html>`__ , in the "
"October, 1999 issue of `*Linux Journal* <http://www.linuxjournal.com>`__ ."
msgstr ""

#: ../../system.rst:3031
msgid "` [4]  <system.html#AEN16504>`__"
msgstr ""

#: ../../system.rst:3033
msgid ""
"The ``       -c      `` option to `mke2fs <system.html#MKE2FSREF>`__ also "
"invokes a check for bad blocks."
msgstr ""

#: ../../system.rst:3037
msgid "` [5]  <system.html#AEN16659>`__"
msgstr ""

#: ../../system.rst:3039
msgid ""
"Since only *root* has write permission in the ``       /var/lock      `` "
"directory, a user script cannot set a lock file there."
msgstr ""

#: ../../system.rst:3043
msgid "` [6]  <system.html#AEN16748>`__"
msgstr ""

#: ../../system.rst:3045
msgid ""
"Operators of single-user Linux systems generally prefer something simpler "
"for backups, such as **tar** ."
msgstr ""

#: ../../system.rst:3049
msgid "` [7]  <system.html#AEN16782>`__"
msgstr ""

#: ../../system.rst:3051
msgid ""
"As of the `version 4 update <bashver4.html#BASH4REF>`__ of Bash, the ``"
"       -f      `` and ``       -c      `` options take a block size of 512 "
"when in `POSIX <sha-bang.html#POSIX2REF>`__ mode. Additionally, there are "
"two new options: ``       -b      `` for `socket <devref1.html#SOCKETREF>`__"
" buffer size, and ``       -T      `` for the limit on the number of "
"*threads* ."
msgstr ""

#: ../../system.rst:3059
msgid "` [8]  <system.html#AEN16847>`__"
msgstr ""

#: ../../system.rst:3061
msgid ""
"NAND is the logical *not-and* operator. Its effect is somewhat similar to "
"subtraction."
msgstr ""

#: ../../system.rst:3065
msgid "` [9]  <system.html#AEN16975>`__"
msgstr ""

#: ../../system.rst:3067
msgid ""
"In Bash and other Bourne shell derivatives, it is possible to set variables "
"in a single command's environment."
msgstr ""

#: ../../system.rst:3074
msgid "# $var1 and $var2 se"
msgstr ""

#: ../../system.rst:3075
msgid "t in the environment of 'commandXXX' only."
msgstr ""
