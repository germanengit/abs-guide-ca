# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Moisès Gómez, Germán Alonso
# This file is distributed under the same license as the Traducció abs-guide branca git gettext-way package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Traducció abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-28 12:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../randomvar.rst:4
# 43782d35db614293a700f2804db19d31
msgid "XXX  9.3. $RANDOM: generate random integer"
msgstr ""

#: ../../randomvar.rst:7
# 15fec003e543459484586f1f00093f6c
msgid "**"
msgstr ""

#: ../../randomvar.rst:9
# 0ecb7b2c04334eeaa86aad66fc1c850f
msgid "*Anyone who attempts to generate random numbers by deterministic means is, of course, living in a state of sin.*"
msgstr ""

#: ../../randomvar.rst:12
# a4b9aaf002fa41fe8cd8c5b573bf6de7
msgid "*--John von Neumann*"
msgstr ""

#: ../../randomvar.rst:16
# f30d0c8ebdf94c2a804ac67a8098a426
msgid "``      $RANDOM     `` is an internal Bash `function <functions.html#FUNCTIONREF>`__ (not a constant) that returns a *pseudorandom* ` [1]  <randomvar.html#FTN.AEN5817>`__ integer in the range 0 - 32767. It should ``             not           `` be used to generate an encryption key."
msgstr ""

#: ../../randomvar.rst:24
# bfaa98252f5848fbb7fabe6a5f2b3da9
msgid "Exemple 11. Generating random numbers"
msgstr ""

#: ../../randomvar.rst:142
# 6100b45392594ebb878883b5d97ce506
msgid "Exemple 12. Picking a random card from a deck"
msgstr ""

#: ../../randomvar.rst:199
# cbb90981d2ae400f8ab6393c48ac3a44
msgid "Exemple 13. Brownian Motion Simulation"
msgstr ""

#: ../../randomvar.rst:331
# 9a888deb42414dc29b06715302623bd9
msgid "*Jipe* points out a set of techniques for generating random numbers within a range."
msgstr ""

#: ../../randomvar.rst:352
# 051ed2adac1043aeb964c54e7a9bb389
msgid "*Bill Gradwohl* came up with an improved formula that works for positive numbers."
msgstr ""

#: ../../randomvar.rst:362
# 406d6214c1d5427385906c8cb5cae1c5
msgid "Here Bill presents a versatile function that returns a random number between two specified values."
msgstr ""

#: ../../randomvar.rst:367
# 711f659d6421456c8f865a7f6ca01d6f
msgid "Exemple 14. Random between values"
msgstr ""

#: ../../randomvar.rst:570
# 3a75c26c4aa04dbf8e5e73e95a996df2
msgid "Just how random is ``      $RANDOM     `` ? The best way to test this is to write a script that tracks the distribution of \"random\" numbers generated by ``      $RANDOM     `` . Let's roll a ``      $RANDOM     `` die a few times . . ."
msgstr ""

#: ../../randomvar.rst:577
# 55304dd007484a9397bfacf6753ac2d8
msgid "Exemple 15. Rolling a single die with RANDOM"
msgstr ""

#: ../../randomvar.rst:655
# cf72c56b419f4d4dbb4ebce0aa9a3d80
msgid "As we have seen in the last example, it is best to *reseed* the ``             RANDOM           `` generator each time it is invoked. Using the same seed for ``             RANDOM           `` repeats the same series of numbers. ` [2]  <randomvar.html#FTN.AEN5857>`__ (This mirrors the behavior of the ``             random()           `` function in *C* .)"
msgstr ""

#: ../../randomvar.rst:664
# d69e545b47f54b06b799cc1f61753d90
msgid "Exemple 16. Reseeding RANDOM"
msgstr ""

#: ../../randomvar.rst:736
# bf6734ad7b8a45beb498aee83ed411e9
msgid "|Note"
msgstr ""

#: ../../randomvar.rst:738
# 00550a2c35c54ab3b9f9d05ca80c7908
msgid "The ``         /dev/urandom        `` pseudo-device file provides a method of generating much more \"random\" pseudorandom numbers than the ``         $RANDOM        `` variable. ``                   dd if=/dev/urandom of=targetfile       bs=1 count=XX                 `` creates a file of well-scattered pseudorandom numbers. However, assigning these numbers to a variable in a script requires a workaround, such as filtering through `od <extmisc.html#ODREF>`__ (as in above example, `Example 16-14 <textproc.html#RND>`__ , and `Example A-36 <contributed-scripts.html#INSERTIONSORT>`__ ), or even piping to `md5sum <filearchiv.html#MD5SUMREF>`__ (see `Example 36-16 <colorizing.html#HORSERACE>`__ )."
msgstr ""

#: ../../randomvar.rst:750
# 0052939d510e49d2bf7b7dccb175e17d
msgid "There are also other ways to generate pseudorandom numbers in a script. **Awk** provides a convenient means of doing this."
msgstr ""

#: ../../randomvar.rst:755
# 97ab256f0a344080a99bde6e866c1726
msgid "Exemple 17. Pseudorandom numbers, using `awk <awk.html#AWKREF>`__"
msgstr ""

#: ../../randomvar.rst:793
# 4bc55fc438d44bdab75f9e9520d50052
msgid "The `date <timedate.html#DATEREF>`__ command also lends itself to `generating pseudorandom integer sequences <timedate.html#DATERANDREF>`__ ."
msgstr ""

#: ../../randomvar.rst:868
# 96d309e1f88c49a7a84fef2432161028
msgid "Notes"
msgstr ""

#: ../../randomvar.rst:871
# 522f93418b0747cc8d49e5c5ac09738f
msgid "` [1]  <randomvar.html#AEN5817>`__"
msgstr ""

#: ../../randomvar.rst:873
# 482ca20b98f14448a6b953b34c409500
msgid "True \"randomness,\" insofar as it exists at all, can only be found in certain incompletely understood natural phenomena, such as radioactive decay. Computers only *simulate* randomness, and computer-generated sequences of \"random\" numbers are therefore referred to as *pseudorandom* ."
msgstr ""

#: ../../randomvar.rst:880
# c37f062443bc4b6a84bac527e03b1206
msgid "` [2]  <randomvar.html#AEN5857>`__"
msgstr ""

#: ../../randomvar.rst:882
# fc8d37e498ff428283b07ce8e24341be
msgid "The *seed* of a computer-generated pseudorandom number series can be considered an identification label. For example, think of the pseudorandom series with a seed of *23* as ``               Series           #23             `` ."
msgstr ""

#: ../../randomvar.rst:887
# 1d57aa7642764d43aad3d7bb619ac84b
msgid "A property of a pseurandom number series is the length of the cycle before it starts repeating itself. A good pseurandom generator will produce series with very long cycles."
msgstr ""

