# 
msgid ""
msgstr ""
"Project-Id-Version: Traducció abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-27 20:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../bashver4.rst:3
msgid "XXX  37.3. Bash, version 4"
msgstr ""

#: ../../bashver4.rst:5
msgid ""
"Chet Ramey announced Version 4 of Bash on the 20th of February, 2009. This "
"release has a number of significant new features, as well as some important "
"bugfixes."
msgstr ""

#: ../../bashver4.rst:9
msgid "Among the new goodies:"
msgstr ""

#: ../../bashver4.rst:11
msgid "Associative arrays. ` [1]  <bashver4.html#FTN.AEN21025>`__"
msgstr ""

#: ../../bashver4.rst:15
msgid ""
"An *associative* array can be thought of as a set of two linked arrays -- "
"one holding the *data* , and the other the *keys* that index the individual "
"elements of the *data* array."
msgstr ""

#: ../../bashver4.rst:24
msgid "Exemple 5. A simple address database"
msgstr ""

#: ../../bashver4.rst:57
msgid "Exemple 6. A somewhat more elaborate address database"
msgstr ""

#: ../../bashver4.rst:116
msgid ""
"See `Example A-53 <contributed-scripts.html#SAMORSE>`__ for an interesting "
"usage of an *associative array* ."
msgstr ""

#: ../../bashver4.rst:121 ../../bashver4.rst:294
msgid "|Caution"
msgstr ""

#: ../../bashver4.rst:123
msgid ""
"Elements of the *index* array may include embedded `space characters "
"<special-chars.html#WHITESPACEREF>`__ , or even leading and/or trailing "
"space characters. However, index array elements containing *only* "
"*whitespace* are *not* permitted."
msgstr ""

#: ../../bashver4.rst:151
msgid "Enhancements to the `case <testbranch.html#CASEESAC1>`__ construct:"
msgstr ""

#: ../../bashver4.rst:152
msgid ""
"the ``                 ;;&               `` and ``                 ;&"
"               `` terminators."
msgstr ""

#: ../../bashver4.rst:157
msgid "Exemple 7. Testing characters"
msgstr ""

#: ../../bashver4.rst:206
msgid "The new **coproc** builtin enables two parallel"
msgstr ""

#: ../../bashver4.rst:207
msgid ""
"`processes <special-chars.html#PROCESSREF>`__ to communicate and interact. "
"As Chet Ramey states in the `Bash FAQ <biblio.html#BASHFAQ>`__ ` [2]  "
"<bashver4.html#FTN.AEN21068>`__ , ver. 4.01:"
msgstr ""

#: ../../bashver4.rst:212
msgid "There is a new 'coproc' reserved word that specifies a coprocess:"
msgstr ""

#: ../../bashver4.rst:214
msgid "an asynchronous command run with two pipes connected to the creating"
msgstr ""

#: ../../bashver4.rst:216
msgid "shell. Coprocs can be named. The input and output file descriptors"
msgstr ""

#: ../../bashver4.rst:218
msgid "and the PID of the coprocess are available to the calling shell in"
msgstr ""

#: ../../bashver4.rst:219
msgid "variables with coproc-specific names. George Dimitriu explains,"
msgstr ""

#: ../../bashver4.rst:222
msgid "\"... coproc ... is a feature used in Bash process substitution,"
msgstr ""

#: ../../bashver4.rst:223
msgid "which now is made publicly available.\""
msgstr ""

#: ../../bashver4.rst:225
msgid "This means it can be explicitly invoked in a script, rather than"
msgstr ""

#: ../../bashver4.rst:226
msgid "just being a behind-the-scenes mechanism used by Bash."
msgstr ""

#: ../../bashver4.rst:228
msgid ""
"Coprocesses use *file descriptors* . `File descriptors enable processes and "
"pipes to communicate <io-redirection.html#FDREF2>`__ ."
msgstr ""

#: ../../bashver4.rst:252
msgid "But, be careful!"
msgstr ""

#: ../../bashver4.rst:296
msgid ""
"The coprocess is *asynchronous* , and this might cause a problem. It may "
"terminate before another process has finished communicating with it."
msgstr ""

#: ../../bashver4.rst:307
msgid "i in {0..10}; do echo \"i ndex = $i\"; done; }"
msgstr ""

#: ../../bashver4.rst:309
msgid "#      ^^^^^^ This i"
msgstr ""

#: ../../bashver4.rst:311
msgid "read -u ${cpname[0]} echo $REPLY"
msgstr ""

#: ../../bashver4.rst:314
msgid "echo ${COPROC[0]}"
msgstr ""

#: ../../bashver4.rst:315
msgid "#+ No output ... the cop rocess timed out"
msgstr ""

#: ../../bashver4.rst:317
msgid "#  after the first l"
msgstr ""

#: ../../bashver4.rst:318
msgid "oop iteration."
msgstr ""

#: ../../bashver4.rst:322
msgid "# However, George Di"
msgstr ""

#: ../../bashver4.rst:323
msgid "mitriu has a partial fix ."
msgstr ""

#: ../../bashver4.rst:326
msgid "coproc cpname { for"
msgstr ""

#: ../../bashver4.rst:327
msgid "i in {0..10}; do echo \"i ndex = $i\"; done; sleep 1;"
msgstr ""

#: ../../bashver4.rst:330
msgid "echo hi > myo; cat -"
msgstr ""

#: ../../bashver4.rst:332
msgid "#       ^^^^^ This i"
msgstr ""

#: ../../bashver4.rst:333
msgid "s a *named* coprocess."
msgstr ""

#: ../../bashver4.rst:335
msgid "echo \"I am main\"$'\\0"
msgstr ""

#: ../../bashver4.rst:337
msgid "myfd=${cpname[0]} echo myfd=$myfd"
msgstr ""

#: ../../bashver4.rst:340
msgid "### while read -u $m"
msgstr ""

#: ../../bashver4.rst:342
msgid "### do ###   echo $REPLY; ### done"
msgstr ""

#: ../../bashver4.rst:346
msgid "echo $cpname_PID"
msgstr ""

#: ../../bashver4.rst:348
msgid "#  Run this with and"
msgstr ""

#: ../../bashver4.rst:349
msgid "without the commented-o"
msgstr ""

#: ../../bashver4.rst:351
msgid "#+ apparent that eac"
msgstr ""

#: ../../bashver4.rst:353
msgid "shell and the coprocess"
msgstr ""

#: ../../bashver4.rst:355
msgid "#+ waits for the oth"
msgstr ""

#: ../../bashver4.rst:356
msgid "er to finish writing in its own write-enabled pi pe."
msgstr ""

#: ../../bashver4.rst:436
msgid "The new **mapfile** builtin makes it possible to load an array with"
msgstr ""

#: ../../bashver4.rst:437
msgid ""
"the contents of a text file without using a loop or `command substitution "
"<arrays.html#ARRAYINITCS>`__ ."
msgstr ""

#: ../../bashver4.rst:459
msgid ""
"The `read <internal.html#READREF>`__ builtin got a minor facelift. The ``"
"        -t       `` `timeout <internal.html#READTIMED>`__ option now accepts"
" (decimal) fractional values ` [3]"
msgstr ""

#: ../../bashver4.rst:462
msgid "<bashver4.html#FTN.AEN21096>`__ and the ``        -i       `` option"
msgstr ""

#: ../../bashver4.rst:464
msgid "<bashver4.html#FTN.AEN21101>`__ Unfortunately, these enhancements"
msgstr ""

#: ../../bashver4.rst:465
msgid "are still a work in progress and not (yet) usable in scripts."
msgstr ""

#: ../../bashver4.rst:470
msgid "Substitució de paràmetre: modificació majúscules-minúscules"
msgstr ""

#: ../../bashver4.rst:472
msgid ""
"Amb la substitució de paràmetre, podem aconseguir canviar majúscules i "
"minúscules:"
msgstr ""

#: ../../bashver4.rst:500
msgid "`Brace expansion <special-chars.html#BRACEEXPREF>`__ has more"
msgstr ""

#: ../../bashver4.rst:501
msgid "options."
msgstr ""

#: ../../bashver4.rst:503
msgid "*Increment/decrement* , specified in the final term within braces."
msgstr ""

#: ../../bashver4.rst:528
msgid ""
"*Zero-padding* , specified in the first term within braces, prefixes each "
"term in the output with the *same number* of zeroes."
msgstr ""

#: ../../bashver4.rst:546
msgid ""
"`*Substring extraction* on *positional parameters* "
"<bashver4.html#SUBSTREXTREF4>`__ now starts with `$0 "
"<othertypesv.html#SCRNAMEPARAM>`__ as the *zero-index* . (This corrects an "
"inconsistency in the treatment of positional parameters.)"
msgstr ""

#: ../../bashver4.rst:580
msgid "The new \\*\\* `globbing <globbingref.html>`__ operator matches"
msgstr ""

#: ../../bashver4.rst:581
msgid ""
"filenames and directories `recursively <localvar.html#RECURSIONREF0>`__ ."
msgstr ""

#: ../../bashver4.rst:631
msgid ""
"The new `$BASHPID <internalvariables.html#BASHPIDREF>`__ internal variable."
msgstr ""

#: ../../bashver4.rst:636
msgid ""
"There is a new `builtin <internal.html#BUILTINREF>`__ error-handling "
"function named **command\\_not\\_found\\_handle** ."
msgstr ""

#: ../../bashver4.rst:659
msgid "*Editorial comment*"
msgstr ""

#: ../../bashver4.rst:661
msgid ""
"Associative arrays? Coprocesses? Whatever happened to the lean and mean Bash"
" we have come to know and love? Could it be suffering from (horrors!) "
"\"feature creep\" ? Or perhaps even Korn shell envy?"
msgstr ""

#: ../../bashver4.rst:665
msgid ""
"*Note to Chet Ramey:* Please add only *essential* features in future Bash "
"releases -- perhaps *for-each* loops and support for multi-dimensional "
"arrays. ` [5]  <bashver4.html#FTN.AEN21179>`__ Most Bash users won't need, "
"won't use, and likely won't greatly appreciate complex \"features\" like "
"built-in debuggers, Perl interfaces, and bolt-on rocket boosters."
msgstr ""

#: ../../bashver4.rst:676
msgid "37.3.1. Bash, version 4.1"
msgstr ""

#: ../../bashver4.rst:679
msgid "Version 4.1 of Bash, released in May, 2010, was primarily a bugfix"
msgstr ""

#: ../../bashver4.rst:680
msgid "update."
msgstr ""

#: ../../bashver4.rst:682
msgid ""
"The `printf <internal.html#PRINTFREF>`__ command now accepts a ``         -v"
"        `` option for setting `array <arrays.html#ARRAYREF>`__ indices."
msgstr ""

#: ../../bashver4.rst:686
msgid ""
"Within `double brackets <testconstructs.html#DBLBRACKETS>`__ , the **>** and"
" **<** string comparison operators now conform to the `locale "
"<localization.html#LOCALEREF>`__ . Since the locale setting may affect the "
"sorting order of string expressions, this has side-effects on comparison "
"tests within *[[ ... ]]* expressions."
msgstr ""

#: ../../bashver4.rst:692
msgid ""
"The `read <internal.html#READREF>`__ builtin now takes a ``         -N"
"        `` option ( *read -N chars* ), which causes the *read* to terminate "
"after *chars* characters."
msgstr ""

#: ../../bashver4.rst:698
msgid "Exemple 8. Reading N characters"
msgstr ""

#: ../../bashver4.rst:722
msgid ""
"`Here documents <here-docs.html#HEREDOCREF>`__ embedded in ``"
"                     $( ... )                   `` command substitution "
"<varassignment.html#COMMANDSUBREF0>`__ constructs may terminate with a "
"simple **)** ."
msgstr ""

#: ../../bashver4.rst:729
msgid "Exemple 9. Using a *here document* to set a variable"
msgstr ""

#: ../../bashver4.rst:765
msgid "37.3.2. Bash, version 4.2"
msgstr ""

#: ../../bashver4.rst:768
msgid "Version 4.2 of Bash, released in February, 2011, contains a number of"
msgstr ""

#: ../../bashver4.rst:769
msgid "new features and enhancements, in addition to bugfixes."
msgstr ""

#: ../../bashver4.rst:771
msgid ""
"Bash now supports the the ``                   \\u                 `` and ``"
"                   \\U                 `` *Unicode* escape."
msgstr ""

#: ../../bashver4.rst:776
msgid ""
"Unicode is a cross-platform standard for encoding into numerical values "
"letters and graphic symbols. This permits representing and displaying "
"characters in foreign alphabets and unusual fonts."
msgstr ""

#: ../../bashver4.rst:841
msgid "|Note"
msgstr ""

#: ../../bashver4.rst:843
msgid ""
"The above example uses the `**$' ... '** <escapingsection.html#STRQ>`__ "
"*string-expansion* construct."
msgstr ""

#: ../../bashver4.rst:851
msgid ""
"When the ``                   lastpipe                 `` shell option is "
"set, the last command in a `pipe <special-chars.html#PIPEREF>`__ *doesn't "
"run in a subshell* ."
msgstr ""

#: ../../bashver4.rst:857
msgid "Exemple 10. Piping input to a `read <internal.html#READREF>`__"
msgstr ""

#: ../../bashver4.rst:886
msgid ""
"This option offers possible \"fixups\" for these example scripts: `Example "
"34-3 <gotchas.html#BADREAD>`__ and `Example 15-8 <internal.html#READPIPE>`__"
" ."
msgstr ""

#: ../../bashver4.rst:890
msgid ""
"Negative `array <arrays.html#ARRAYREF>`__ indices permit counting backwards "
"from the end of an array."
msgstr ""

#: ../../bashver4.rst:895
msgid "Exemple 11. Negative array indices"
msgstr ""

#: ../../bashver4.rst:944
msgid ""
"`Substring extraction <string-manipulation.html#SUBSTREXTR01>`__ uses a "
"negative *length* parameter to specify an offset from the *end* of the "
"target string."
msgstr ""

#: ../../bashver4.rst:950
msgid "Exemple 12. Negative parameter in string-extraction construct"
msgstr ""

#: ../../bashver4.rst:991
msgid "` [1]  <bashver4.html#AEN21025>`__"
msgstr ""

#: ../../bashver4.rst:993
msgid ""
"To be more specific, Bash 4+ has *limited* support for associative arrays. "
"It's a bare-bones implementation, and it lacks the much of the functionality"
" of such arrays in other programming languages. Note, however, that "
"`associative arrays in Bash seem to execute faster and more efficiently than"
" numerically-indexed arrays <optimizations.html#ASSOCARRTST>`__ ."
msgstr ""

#: ../../bashver4.rst:1001
msgid "` [2]  <bashver4.html#AEN21068>`__"
msgstr ""

#: ../../bashver4.rst:1003
msgid "Copyright 1995-2009 by Chester Ramey."
msgstr ""

#: ../../bashver4.rst:1006
msgid "` [3]  <bashver4.html#AEN21096>`__"
msgstr ""

#: ../../bashver4.rst:1008
msgid ""
"This only works with `pipes <special-chars.html#PIPEREF>`__ and certain "
"other *special* files."
msgstr ""

#: ../../bashver4.rst:1012
msgid "` [4]  <bashver4.html#AEN21101>`__"
msgstr ""

#: ../../bashver4.rst:1014
msgid ""
"But only in conjunction with `readline <internal.html#READLINEREF>`__ , "
"i.e., from the command-line."
msgstr ""

#: ../../bashver4.rst:1018
msgid "` [5]  <bashver4.html#AEN21179>`__"
msgstr ""

#: ../../bashver4.rst:1020
msgid ""
"And while you're at it, consider fixing the notorious `piped read "
"<internal.html#PIPEREADREF0>`__ problem."
msgstr ""
