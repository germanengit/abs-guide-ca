# 
msgid ""
msgstr ""
"Project-Id-Version: Traducció abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-28 12:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../commandsub.rst:3
msgid "XXX  Chapter 12. Substitució de comanda"
msgstr ""

#: ../../commandsub.rst:5
msgid ""
"**Command substitution** reassigns the output of a command ` [1] "
"<commandsub.html#FTN.AEN7205>`__ or even multiple commands; it"
msgstr ""

#: ../../commandsub.rst:8
msgid "<commandsub.html#FTN.AEN7211>`__"
msgstr ""

#: ../../commandsub.rst:10
msgid "The classic form of command substitution uses *backquotes* (\\`...\\`)."
msgstr ""

#: ../../commandsub.rst:11
msgid "Commands within backquotes (backticks) generate command-line text."
msgstr ""

#: ../../commandsub.rst:22
msgid ""
"**The output of commands can be used as arguments to another command, to set"
" a variable, and even for generating the argument list in a `for "
"<loops1.html#FORLOOPREF1>`__ loop.**"
msgstr ""

#: ../../commandsub.rst:57 ../../commandsub.rst:674
msgid "|Note"
msgstr ""

#: ../../commandsub.rst:59
msgid "Command substitution invokes a"
msgstr ""

#: ../../commandsub.rst:60
msgid "`subshell <subshells.html#SUBSHELLSREF>`__ ."
msgstr ""

#: ../../commandsub.rst:67 ../../commandsub.rst:268 ../../commandsub.rst:415
msgid "|Caution"
msgstr ""

#: ../../commandsub.rst:69
msgid "Command substitution may result in `word"
msgstr ""

#: ../../commandsub.rst:70
msgid "splitting <quotingvar.html#WSPLITREF>`__ ."
msgstr ""

#: ../../commandsub.rst:94
msgid ""
"Even when there is no word splitting, command substitution can remove "
"trailing newlines."
msgstr ""

#: ../../commandsub.rst:107 ../../commandsub.rst:111
msgid "'"
msgstr ""

#: ../../commandsub.rst:109
msgid "cd 'dir with trailin"
msgstr ""

#: ../../commandsub.rst:113
msgid "cd \"`pwd`\"  # Error"
msgstr ""

#: ../../commandsub.rst:115
msgid "# bash: cd: /tmp/fil"
msgstr ""

#: ../../commandsub.rst:117
msgid "No such file or directo"
msgstr ""

#: ../../commandsub.rst:118
msgid "ry"
msgstr ""

#: ../../commandsub.rst:120
msgid "cd \"$PWD\"   # Works"
msgstr ""

#: ../../commandsub.rst:121
msgid "fine."
msgstr ""

#: ../../commandsub.rst:127
msgid "old_tty_setting=$(st"
msgstr ""

#: ../../commandsub.rst:128
msgid "ty -g)   # Save old term inal setting."
msgstr ""

#: ../../commandsub.rst:130
msgid "echo \"Hit a key \" stty -icanon -echo"
msgstr ""

#: ../../commandsub.rst:132
msgid "# Disable \"cano"
msgstr ""

#: ../../commandsub.rst:133
msgid "nical\" mode for terminal ."
msgstr ""

#: ../../commandsub.rst:136
msgid "# Also, disable"
msgstr ""

#: ../../commandsub.rst:138
msgid "key=$(dd bs=1 count="
msgstr ""

#: ../../commandsub.rst:139
msgid "1 2> /dev/null)   # Usin g 'dd' to get a keypress ."
msgstr ""

#: ../../commandsub.rst:142
msgid "stty \"$old_tty_setti"
msgstr ""

#: ../../commandsub.rst:143
msgid "ng\"      # Restore old s etting."
msgstr ""

#: ../../commandsub.rst:145
msgid "echo \"You hit ${#key"
msgstr ""

#: ../../commandsub.rst:146
msgid "} key.\"  # ${#variable} = number of characters i n $variable"
msgstr ""

#: ../../commandsub.rst:149
msgid "# # Hit any key except"
msgstr ""

#: ../../commandsub.rst:151
msgid "RETURN, and the output"
msgstr ""

#: ../../commandsub.rst:153
msgid "# Hit RETURN, and it"
msgstr ""

#: ../../commandsub.rst:155
msgid "# The newline gets e"
msgstr ""

#: ../../commandsub.rst:156
msgid "aten in the command subs titution."
msgstr ""

#: ../../commandsub.rst:159
msgid "#Code snippet by StÃ"
msgstr ""

#: ../../commandsub.rst:160
msgid "©phane Chazelas."
msgstr ""

#: ../../commandsub.rst:270
msgid ""
"Using **echo** to output an *unquoted* variable set with command "
"substitution removes trailing newlines characters from the output of the "
"reassigned command(s). This can cause unpleasant surprises."
msgstr ""

#: ../../commandsub.rst:284
msgid "ng."
msgstr ""

#: ../../commandsub.rst:286
msgid "# However, what you"
msgstr ""

#: ../../commandsub.rst:288
msgid "# total 3 -rw-rw-r--"
msgstr ""

#: ../../commandsub.rst:289
msgid "1 bozo bozo 30 May 13 1"
msgstr ""

#: ../../commandsub.rst:290
msgid "7:15 1.txt -rw-rw-r-- 1 bozo"
msgstr ""

#: ../../commandsub.rst:292
msgid "# bozo 51 May 15 20:"
msgstr ""

#: ../../commandsub.rst:293
msgid "57 t2.sh -rwxr-xr-x 1 bo zo bozo 217 Mar 5 21:13 wi.sh"
msgstr ""

#: ../../commandsub.rst:297
msgid "# The newlines disap"
msgstr ""

#: ../../commandsub.rst:298
msgid "peared."
msgstr ""

#: ../../commandsub.rst:301
msgid "echo \"$dir_listing\""
msgstr ""

#: ../../commandsub.rst:303 ../../commandsub.rst:306
msgid "# -rw-rw-r--    1 bo"
msgstr ""

#: ../../commandsub.rst:309
msgid "# -rwxr-xr-x    1 bo"
msgstr ""

#: ../../commandsub.rst:311
msgid "wi.sh"
msgstr ""

#: ../../commandsub.rst:359
msgid ""
"Command substitution even permits setting a variable to the contents of a "
"file, using either `redirection <io-redirection.html#IOREDIRREF>`__ or the "
"`cat <basic.html#CATREF>`__ command."
msgstr ""

#: ../../commandsub.rst:417
msgid ""
"Do not set a variable to the contents of a *long* text file unless you have "
"a very good reason for doing so. Do not set a variable to the contents of a "
"*binary* file, even as a joke."
msgstr ""

#: ../../commandsub.rst:423
msgid "Exemple 1. Stupid script tricks"
msgstr ""

#: ../../commandsub.rst:453
msgid ""
"Notice that a *buffer overrun* does not occur. This is one instance where an"
" interpreted language, such as Bash, provides more protection from "
"programmer mistakes than a compiled language."
msgstr ""

#: ../../commandsub.rst:510
msgid ""
"Command substitution permits setting a variable to the output of a `loop "
"<loops1.html#FORLOOPREF1>`__ . The key to this is grabbing the output of an "
"`echo <internal.html#ECHOREF>`__ command within the loop."
msgstr ""

#: ../../commandsub.rst:516
msgid "Exemple 2. Generating a variable from a loop"
msgstr ""

#: ../../commandsub.rst:551
msgid ""
"Command substitution makes it possible to extend the toolset available to "
"Bash. It is simply a matter of writing a program or script that outputs to "
"``         stdout        `` (like a well-behaved UNIX tool should) and "
"assigning that output to a variable."
msgstr ""

#: ../../commandsub.rst:676
msgid "The **$(...)** form has superseded backticks for command substitution."
msgstr ""

#: ../../commandsub.rst:683
msgid "\"/p $file)   # From \"grp .sh\"  example."
msgstr ""

#: ../../commandsub.rst:686
msgid "# Setting a variable"
msgstr ""

#: ../../commandsub.rst:687
msgid "to the contents of a te"
msgstr ""

#: ../../commandsub.rst:689
msgid "File_contents1=$(cat"
msgstr ""

#: ../../commandsub.rst:691
msgid "File_contents2=$(<$f"
msgstr ""

#: ../../commandsub.rst:692
msgid "ile2)        # Bash perm its this also."
msgstr ""

#: ../../commandsub.rst:698
msgid ""
"The **$(...)** form of command substitution treats a double backslash in a "
"different way than **\\`...\\`** ."
msgstr ""

#: ../../commandsub.rst:710
msgid "\\"
msgstr ""

#: ../../commandsub.rst:717
msgid "<commandsub.html#FTN.AEN7308>`__"
msgstr ""

#: ../../commandsub.rst:724
msgid "$(echo * | awk '{print $ 8}') )"
msgstr ""

#: ../../commandsub.rst:730
msgid "Or, for something a bit more elaborate . . ."
msgstr ""

#: ../../commandsub.rst:734
msgid "Exemple 3. Finding anagrams"
msgstr ""

#: ../../commandsub.rst:940
msgid "Examples of command substitution in shell scripts:"
msgstr ""

#: ../../commandsub.rst:942
msgid "`Example 11-8 <loops1.html#BINGREP>`__"
msgstr ""

#: ../../commandsub.rst:944
msgid "`Example 11-27 <testbranch.html#CASECMD>`__"
msgstr ""

#: ../../commandsub.rst:946
msgid "`Example 9-16 <randomvar.html#SEEDINGRANDOM>`__"
msgstr ""

#: ../../commandsub.rst:948
msgid "`Example 16-3 <moreadv.html#EX57>`__"
msgstr ""

#: ../../commandsub.rst:950
msgid "`Example 16-22 <textproc.html#LOWERCASE>`__"
msgstr ""

#: ../../commandsub.rst:952
msgid "`Example 16-17 <textproc.html#GRP>`__"
msgstr ""

#: ../../commandsub.rst:954
msgid "`Example 16-54 <extmisc.html#EX53>`__"
msgstr ""

#: ../../commandsub.rst:956
msgid "`Example 11-14 <loops1.html#EX24>`__"
msgstr ""

#: ../../commandsub.rst:958
msgid "`Example 11-11 <loops1.html#SYMLINKS>`__"
msgstr ""

#: ../../commandsub.rst:960
msgid "`Example 16-32 <filearchiv.html#STRIPC>`__"
msgstr ""

#: ../../commandsub.rst:962
msgid "`Example 20-8 <redircb.html#REDIR4>`__"
msgstr ""

#: ../../commandsub.rst:964
msgid "`Example A-16 <contributed-scripts.html#TREE>`__"
msgstr ""

#: ../../commandsub.rst:966
msgid "`Example 29-3 <procref1.html#PIDID>`__"
msgstr ""

#: ../../commandsub.rst:968
msgid "`Example 16-47 <mathc.html#MONTHLYPMT>`__"
msgstr ""

#: ../../commandsub.rst:970
msgid "`Example 16-48 <mathc.html#BASE>`__"
msgstr ""

#: ../../commandsub.rst:972
msgid "`Example 16-49 <mathc.html#ALTBC>`__"
msgstr ""

#: ../../commandsub.rst:976
msgid "Notes"
msgstr ""

#: ../../commandsub.rst:979
msgid "` [1]  <commandsub.html#AEN7205>`__"
msgstr ""

#: ../../commandsub.rst:981
msgid ""
"For purposes of *command substitution* , a **command** may be an external "
"system command, an internal scripting `builtin <internal.html#BUILTINREF>`__"
" , or even `a script function <assortedtips.html#RVT>`__ ."
msgstr ""

#: ../../commandsub.rst:987
msgid "` [2]  <commandsub.html#AEN7211>`__"
msgstr ""

#: ../../commandsub.rst:989
msgid ""
"In a more technically correct sense, *command substitution* extracts the ``"
"       stdout      `` of a command, then assigns it to a variable using the "
"= operator."
msgstr ""

#: ../../commandsub.rst:994
msgid "` [3]  <commandsub.html#AEN7308>`__"
msgstr ""

#: ../../commandsub.rst:996
msgid ""
"In fact, nesting with backticks is also possible, but only by escaping the "
"inner backticks, as John Default points out."
msgstr ""

#: ../../commandsub.rst:1004
msgid "`echo * | awk '{print $8 }'\\` `"
msgstr ""
