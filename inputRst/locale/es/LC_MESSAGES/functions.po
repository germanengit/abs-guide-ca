# 
msgid ""
msgstr ""
"Project-Id-Version: Traducci√≥ abs-guide branca git gettext-way 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-27 20:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../functions.rst:4
msgid "XXX  Chapter 24. Functions"
msgstr ""

#: ../../functions.rst:9
msgid "**Table of Contents**"
msgstr ""

#: ../../functions.rst:13
msgid ""
"24.1. `Complex Functions and Function Complexities <complexfunct.html>`__"
msgstr ""

#: ../../functions.rst:18
msgid "24.2. `Local Variables <localvar.html>`__"
msgstr ""

#: ../../functions.rst:22
msgid "24.3. `Recursion Without Local Variables <recurnolocvar.html>`__"
msgstr ""

#: ../../functions.rst:27
msgid ""
"Like \"real\" programming languages, Bash has functions, though in a "
"somewhat limited implementation. A function is a subroutine, a `code block "
"<special-chars.html#CODEBLOCKREF>`__ that implements a set of operations, a "
"\"black box\" that performs a specified task. Wherever there is repetitive "
"code, when a task repeats with only slight variations in procedure, then "
"consider using a function."
msgstr ""

#: ../../functions.rst:35 ../../functions.rst:40
msgid "``             command           `` ... }"
msgstr ""

#: ../../functions.rst:38
msgid "or ``             function_name           `` () {"
msgstr ""

#: ../../functions.rst:43
msgid ""
"This second form will cheer the hearts of C programmers (and is more "
"`portable <portabilityissues.html>`__ )."
msgstr ""

#: ../../functions.rst:46
msgid ""
"As in C, the function's opening bracket may optionally appear on the second "
"line."
msgstr ""

#: ../../functions.rst:50
msgid "{ ``             command           `` ... }"
msgstr ""

#: ../../functions.rst:56 ../../functions.rst:216 ../../functions.rst:492
msgid "|Note"
msgstr ""

#: ../../functions.rst:58
msgid "A function may be \"compacted\" into a single line."
msgstr ""

#: ../../functions.rst:67
msgid "^     ^"
msgstr ""

#: ../../functions.rst:72
msgid ""
"In this case, however, a *semicolon* must follow the final command in the "
"function."
msgstr ""

#: ../../functions.rst:83 ../../functions.rst:90
msgid "^"
msgstr ""

#: ../../functions.rst:85
msgid "fun2 () { echo \"Even"
msgstr ""

#: ../../functions.rst:86
msgid "a single-command functi"
msgstr ""

#: ../../functions.rst:88
msgid "#"
msgstr ""

#: ../../functions.rst:128
msgid ""
"Functions are called, *triggered* , simply by invoking their names. *A "
"function call is equivalent to a command.*"
msgstr ""

#: ../../functions.rst:133
msgid "Exemple 1. Simple functions"
msgstr ""

#: ../../functions.rst:180
msgid ""
"The function definition must precede the first call to it. There is no "
"method of \"declaring\" the function, as, for example, in C."
msgstr ""

#: ../../functions.rst:218
msgid "Functions may not be empty!"
msgstr ""

#: ../../functions.rst:232
msgid "xit here!"
msgstr ""

#: ../../functions.rst:234
msgid "# $ sh empty-functio"
msgstr ""

#: ../../functions.rst:236 ../../functions.rst:239
msgid "# empty-function.sh:"
msgstr ""

#: ../../functions.rst:237
msgid "line 6: syntax error ne"
msgstr ""

#: ../../functions.rst:240
msgid "line 6: `}'"
msgstr ""

#: ../../functions.rst:242
msgid "# $ echo $? # 2"
msgstr ""

#: ../../functions.rst:246
msgid "# Note that a functi"
msgstr ""

#: ../../functions.rst:247
msgid "on containing only comme nts is empty."
msgstr ""

#: ../../functions.rst:250 ../../functions.rst:512 ../../functions.rst:518
msgid "func () {"
msgstr ""

#: ../../functions.rst:252
msgid "# Comment 1. # Comment 2. # This is still an"
msgstr ""

#: ../../functions.rst:256
msgid "# Thank you, Mark"
msgstr ""

#: ../../functions.rst:257
msgid "Bova, for pointing this out."
msgstr ""

#: ../../functions.rst:259
msgid "} # Results in same er"
msgstr ""

#: ../../functions.rst:261
msgid "ror message as above."
msgstr ""

#: ../../functions.rst:264
msgid "# However ..."
msgstr ""

#: ../../functions.rst:266
msgid "not_quite_empty () {"
msgstr ""

#: ../../functions.rst:268
msgid "illegal_command"
msgstr ""

#: ../../functions.rst:269
msgid "} #  A script contai"
msgstr ""

#: ../../functions.rst:270
msgid "ning this function will *not* bomb"
msgstr ""

#: ../../functions.rst:272
msgid "#+ as long as the"
msgstr ""

#: ../../functions.rst:273
msgid "function is not called."
msgstr ""

#: ../../functions.rst:275
msgid "not_empty () {"
msgstr ""

#: ../../functions.rst:277
msgid ":"
msgstr ""

#: ../../functions.rst:278
msgid "} # Contains a : (nu"
msgstr ""

#: ../../functions.rst:280
msgid "okay."
msgstr ""

#: ../../functions.rst:283
msgid "# Thank you, Dominic"
msgstr ""

#: ../../functions.rst:284
msgid "k Geyer and Thiemo Kelln er."
msgstr ""

#: ../../functions.rst:389
msgid ""
"It is even possible to nest a function within another function, although "
"this is not very useful."
msgstr ""

#: ../../functions.rst:418
msgid ""
"Function declarations can appear in unlikely places, even where a command "
"would otherwise go."
msgstr ""

#: ../../functions.rst:488
msgid "See also `Example A-56 <contributed-scripts.html#GRONSFELD>`__"
msgstr ""

#: ../../functions.rst:494
msgid ""
"What happens when different versions of the same function appear in a "
"script?"
msgstr ""

#: ../../functions.rst:503
msgid "#  when a function i"
msgstr ""

#: ../../functions.rst:504
msgid "s defined multiple times ,"
msgstr ""

#: ../../functions.rst:506
msgid "#  the final version"
msgstr ""

#: ../../functions.rst:508
msgid "#  This is not, howe"
msgstr ""

#: ../../functions.rst:509
msgid "ver, particularly useful ."
msgstr ""

#: ../../functions.rst:514
msgid "echo \"First versio"
msgstr ""

#: ../../functions.rst:516 ../../functions.rst:522
msgid "}"
msgstr ""

#: ../../functions.rst:520
msgid "echo \"Second versi"
msgstr ""

#: ../../functions.rst:524
msgid "func   # Second vers"
msgstr ""

#: ../../functions.rst:525
msgid "ion of func ()."
msgstr ""

#: ../../functions.rst:527
msgid "exit $?"
msgstr ""

#: ../../functions.rst:529
msgid "#  It is even possib"
msgstr ""

#: ../../functions.rst:530
msgid "le to use functions to o verride"
msgstr ""

#: ../../functions.rst:532
msgid "#+ or preempt system"
msgstr ""

#: ../../functions.rst:534
msgid "#  Of course, this i"
msgstr ""

#: ../../functions.rst:535
msgid "s *not* advisable."
msgstr ""
